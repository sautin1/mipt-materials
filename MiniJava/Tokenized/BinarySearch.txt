CLASS{0,5}  ID(BinarySearch){0,17} {
    PUBLIC{1,6}  STATIC{1,12}  VOID{1,16}  MAIN{1,20} (STRING{1,26} [] ID(a){1,27} ){
	SYSTEM.OUT.PRINTLN{2,19} (NEW{2,22}  ID(BS){2,24} ().ID(Start){2,29} (INT(20){2,31} ));
    }
}
// ID(This){5,4}  CLASS{5,9}  ID(contains){5,17}  ID(an){5,19}  ID(array){5,24}  ID(of){5,26}  ID(integers){5,34}  ID(and){5,37} 
// ID(methods){6,7}  ID(to){6,9}  ID(initialize){6,19} , ID(print){6,24}  ID(and){6,27}  ID(search){6,33}  ID(the){6,36}  ID(array){6,41} 
// ID(using){7,5}  ID(Binary){7,11}  ID(Search){7,17} 

CLASS{9,5}  ID(BS){9,7} {
    INT{10,3} [] ID(number){10,9}  ;
    INT{11,3}  ID(size){11,7}  ;

    // ID(Invoke){13,6}  ID(methods){13,13}  ID(to){13,15}  ID(initialize){13,25} , ID(print){13,30}  ID(and){13,33}  ID(search){13,39} 
    // ID(for){14,3}  ID(elements){14,11}  ID(on){14,13}  ID(the){14,16}  ID(array){14,21} 
    PUBLIC{15,6}  INT{15,9}  ID(Start){15,14} (INT{15,17}  ID(sz){15,19} ){
	INT{16,4}  ID(aux01){16,9}  ;
	INT{17,4}  ID(aux02){17,9}  ;
	ID(aux01){18,6}  = THIS{18,10} .ID(Init){18,14} (ID(sz){18,16} );
	ID(aux02){19,6}  = THIS{19,10} .ID(Print){19,15} ();
	IF{20,3}  (THIS{20,7} .ID(Search){20,13} (INT(8){20,14} )) SYSTEM.OUT.PRINTLN{20,32} (INT(1){20,33} ) ;
	ELSE{21,5}  SYSTEM.OUT.PRINTLN{21,23} (INT(0){21,24} ) ;
	IF{22,3}  (THIS{22,7} .ID(Search){22,13} (INT(19){22,15} )) SYSTEM.OUT.PRINTLN{22,33} (INT(1){22,34} ) ;
	ELSE{23,5}  SYSTEM.OUT.PRINTLN{23,23} (INT(0){23,24} ) ;
	IF{24,3}  (THIS{24,7} .ID(Search){24,13} (INT(20){24,15} )) SYSTEM.OUT.PRINTLN{24,33} (INT(1){24,34} ) ;
	ELSE{25,5}  SYSTEM.OUT.PRINTLN{25,23} (INT(0){25,24} ) ;
	IF{26,3}  (THIS{26,7} .ID(Search){26,13} (INT(21){26,15} )) SYSTEM.OUT.PRINTLN{26,33} (INT(1){26,34} ) ;
	ELSE{27,5}  SYSTEM.OUT.PRINTLN{27,23} (INT(0){27,24} ) ;
	IF{28,3}  (THIS{28,7} .ID(Search){28,13} (INT(37){28,15} )) SYSTEM.OUT.PRINTLN{28,33} (INT(1){28,34} ) ;
	ELSE{29,5}  SYSTEM.OUT.PRINTLN{29,23} (INT(0){29,24} ) ;
	IF{30,3}  (THIS{30,7} .ID(Search){30,13} (INT(38){30,15} )) SYSTEM.OUT.PRINTLN{30,33} (INT(1){30,34} ) ;
	ELSE{31,5}  SYSTEM.OUT.PRINTLN{31,23} (INT(0){31,24} ) ;
	IF{32,3}  (THIS{32,7} .ID(Search){32,13} (INT(39){32,15} )) SYSTEM.OUT.PRINTLN{32,33} (INT(1){32,34} ) ;
	ELSE{33,5}  SYSTEM.OUT.PRINTLN{33,23} (INT(0){33,24} ) ;
	IF{34,3}  (THIS{34,7} .ID(Search){34,13} (INT(50){34,15} )) SYSTEM.OUT.PRINTLN{34,33} (INT(1){34,34} ) ;
	ELSE{35,5}  SYSTEM.OUT.PRINTLN{35,23} (INT(0){35,24} ) ;

	RETURN{37,7}  INT(999){37,10}  ;
    }


    // ID(Search){41,6}  ID(for){41,9}  ID(a){41,10}  ID(specific){41,18}  ID(value){41,23}  (ID(num){41,26} ) ID(using){41,31} 
    // ID(binary){42,6}  ID(search){42,12} 
    PUBLIC{43,6}  BOOLEAN{43,13}  ID(Search){43,19} (INT{43,22}  ID(num){43,25} ){
	BOOLEAN{44,8}  ID(bs01){44,12}  ;
	INT{45,4}  ID(right){45,9}  ;
	INT{46,4}  ID(left){46,8}  ;
	BOOLEAN{47,8}  ID(var_cont){47,16}  ;
	INT{48,4}  ID(medium){48,10}  ;
	INT{49,4}  ID(aux01){49,9}  ;
	INT{50,4}  ID(nt){50,6}  ;

	ID(aux01){52,6}  = INT(0){52,7}  ;
	ID(bs01){53,5}  = FALSE{53,10}  ;
	ID(right){54,6}  = ID(number){54,12} .LENGTH{54,18}  ;
	ID(right){55,6}  = ID(right){55,11}  - INT(1){55,12}  ;
	ID(left){56,5}  = INT(0){56,6}  ;
	ID(var_cont){57,9}  = TRUE{57,13}  ;
	WHILE{58,6}  (ID(var_cont){58,14} ){
	    ID(medium){59,7}  = ID(left){59,11}  + ID(right){59,16}  ;
	    ID(medium){60,7}  = THIS{60,11} .ID(Div){60,14} (ID(medium){60,20} );
	    ID(aux01){61,6}  = ID(number){61,12} [ID(medium){61,18} ] ;
	    IF{62,3}  (ID(num){62,6}  < ID(aux01){62,11} ) ID(right){62,16}  = ID(medium){62,22}  - INT(1){62,23}  ;
	    ELSE{63,5}  ID(left){63,9}  = ID(medium){63,15}  + INT(1){63,16}  ;
	    IF{64,3}  (THIS{64,7} .ID(Compare){64,14} (ID(aux01){64,19} ,ID(num){64,22} )) ID(var_cont){64,30}  = FALSE{64,35}  ;
	    ELSE{65,5}  ID(var_cont){65,13}  = TRUE{65,17}  ;
	    IF{66,3}  (ID(right){66,8}  < ID(left){66,12} ) ID(var_cont){66,20}  = FALSE{66,25}  ;
	    ELSE{67,5}  ID(nt){67,7}  = INT(0){67,8}  ;
	}

	IF{70,3}  (THIS{70,7} .ID(Compare){70,14} (ID(aux01){70,19} ,ID(num){70,22} )) ID(bs01){70,26}  = TRUE{70,30}  ;
	ELSE{71,5}  ID(bs01){71,9}  = FALSE{71,14}  ;
	RETURN{72,7}  ID(bs01){72,11}  ;
    }

    // ID(This){75,4}  ID(method){75,10}  ID(computes){75,18}  ID(and){75,21}  ID(returns){75,28}  ID(the){75,31} 
    // ID(integer){76,7}  ID(division){76,15}  ID(of){76,17}  ID(a){76,18}  ID(number){76,24}  (ID(num){76,27} ) ID(by){76,29}  INT(2){76,30} 
    PUBLIC{77,6}  INT{77,9}  ID(Div){77,12} (INT{77,15}  ID(num){77,18} ){
	INT{78,4}  ID(count01){78,11}  ;
	INT{79,4}  ID(count02){79,11}  ;
	INT{80,4}  ID(aux03){80,9}  ;

	ID(count01){82,8}  = INT(0){82,9}  ;
	ID(count02){83,8}  = INT(0){83,9}  ;
	ID(aux03){84,6}  = ID(num){84,9}  - INT(1){84,10}  ;
	WHILE{85,6}  (ID(count02){85,13}  < ID(aux03){85,18} ) {
	    ID(count01){86,8}  = ID(count01){86,15}  + INT(1){86,16}  ;
	    ID(count02){87,8}  = ID(count02){87,15}  + INT(2){87,16}  ;
	}
	RETURN{89,7}  ID(count01){89,14}  ;	
    }

    
    // ID(This){93,4}  ID(method){93,10}  ID(compares){93,18}  ID(two){93,21}  ID(integers){93,29}  ID(and){93,32} 
    // ID(returns){94,7}  TRUE{94,11}  IF{94,13}  ID(they){94,17}  ID(are){94,20}  ID(equal){94,25}  ID(and){94,28}  FALSE{94,33} 
    // ID(otherwise){95,9} 
    PUBLIC{96,6}  BOOLEAN{96,13}  ID(Compare){96,20} (INT{96,23}  ID(num1){96,27}  , INT{96,30}  ID(num2){96,34} ){
	BOOLEAN{97,8}  ID(retval){97,14}  ;
	INT{98,4}  ID(aux02){98,9}  ;

	ID(retval){100,7}  = FALSE{100,12}  ;
	ID(aux02){101,6}  = ID(num2){101,10}  + INT(1){101,11}  ;
	IF{102,3}  (ID(num1){102,7}  < ID(num2){102,11} ) ID(retval){102,17}  = FALSE{102,22}  ;
	ELSE{103,5}  IF{103,7}  (!(ID(num1){103,11}  < ID(aux02){103,16} )) ID(retval){103,22}  = FALSE{103,27}  ;
	ELSE{104,5}  ID(retval){104,11}  = TRUE{104,15}  ;
	RETURN{105,7}  ID(retval){105,13}  ;
    }

    // ID(Print){108,5}  ID(the){108,8}  ID(integer){108,15}  ID(array){108,20} 
    PUBLIC{109,6}  INT{109,9}  ID(Print){109,14} (){
	INT{110,4}  ID(j){110,5}  ;

	ID(j){112,2}  = INT(1){112,3}  ;
	WHILE{113,6}  (ID(j){113,7}  < (ID(size){113,11} )) {
	    SYSTEM.OUT.PRINTLN{114,19} (ID(number){114,25} [ID(j){114,26} ]);
	    ID(j){115,2}  = ID(j){115,3}  + INT(1){115,4}  ;
	}
	SYSTEM.OUT.PRINTLN{117,19} (INT(99999){117,24} );
	RETURN{118,7}  INT(0){118,8}  ;
    }
    

    // ID(Initialize){122,10}  ID(the){122,13}  ID(integer){122,20}  ID(array){122,25} 
    PUBLIC{123,6}  INT{123,9}  ID(Init){123,13} (INT{123,16}  ID(sz){123,18} ){
	INT{124,4}  ID(j){124,5}  ;
	INT{125,4}  ID(k){125,5}  ;
	INT{126,4}  ID(aux02){126,9}  ;
	INT{127,4}  ID(aux01){127,9}  ;

	ID(size){129,5}  = ID(sz){129,7}  ;
	ID(number){130,7}  = NEW{130,10}  INT{130,13} [ID(sz){130,15} ] ;
	
	ID(j){132,2}  = INT(1){132,3}  ;
	ID(k){133,2}  = ID(size){133,6}  + INT(1){133,7}  ;
	WHILE{134,6}  (ID(j){134,7}  < (ID(size){134,11} )) {
	    ID(aux01){135,6}  = INT(2){135,7}  * ID(j){135,8}  ;
	    ID(aux02){136,6}  = ID(k){136,7}  - INT(3){136,8}  ;
	    ID(number){137,7} [ID(j){137,8} ] = ID(aux01){137,13}  + ID(aux02){137,18}  ;
	    ID(j){138,2}  = ID(j){138,3}  + INT(1){138,4}  ;
	    ID(k){139,2}  = ID(k){139,3}  - INT(1){139,4}  ;
	}
	RETURN{141,7}  INT(0){141,8}  ;	
    }

}
