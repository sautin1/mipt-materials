digraph {
	ordering = out;
	MethDeclList0 -> MethDecl0;
	ExpId12 -> "Id12: num_aux";
	StatList1 -> StatConditional0;
	StatAssignId1 -> ExpId9;
	StatAssignId1 -> ExpBinary1;
	ExpId9 -> "Id9: num_aux";
	ExpNumber2 -> "Value2: 1";
	StatAssignId0 -> ExpId8;
	StatAssignId0 -> ExpNumber2;
	ExpBinary1 -> ExpId10;
	ExpBinary1 -> Times0;
	ExpBinary1 -> ExpId11;
	StatConditional0 -> ExpBinary0;
	StatConditional0 -> StatAssignId0;
	StatConditional0 -> StatAssignId1;
	ExpNumber1 -> "Value1: 1";
	ExpId10 -> "Id10: num";
	StatPrint0 -> ExpNumber0;
	ExpId8 -> "Id8: num_aux";
	ExpId2 -> "Id2: Fac";
	VarDecl1 -> TypeModInt2;
	VarDecl1 -> ExpId6;
	ExpId11 -> "Id11: num_aux";
	VarDeclList1 -> VarDecl1;
	Program0 -> MainClass0;
	Program0 -> ClassDeclList0;
	ClassDecl0 -> ExpId2;
	ClassDecl0 -> VarDeclList0;
	ClassDecl0 -> MethDeclList0;
	StatList0 -> StatPrint0;
	MainClass0 -> ExpId0;
	MainClass0 -> ExpId1;
	MainClass0 -> StatList0;
	ExpId0 -> "Id0: Main";
	ExpId1 -> "Id1: a";
	VarDeclList0 -> VarDecl0;
	ExpNumber0 -> "Value0: 10";
	VarDecl0 -> TypeModBool0;
	VarDecl0 -> ExpId3;
	ExpId7 -> "Id7: num";
	MethDecl0 -> AccessModPublic0;
	MethDecl0 -> TypeModInt0;
	MethDecl0 -> ExpId4;
	MethDecl0 -> MethArgList0;
	MethDecl0 -> VarDeclList1;
	MethDecl0 -> StatList1;
	MethDecl0 -> ExpId12;
	ExpId3 -> "Id3: num_aux";
	ExpId4 -> "Id4: Compute";
	MethArg0 -> TypeModInt1;
	MethArg0 -> ExpId5;
	MethArgList0 -> MethArg0;
	ExpId5 -> "Id5: num";
	ExpId6 -> "Id6: num_aux";
	ClassDeclList0 -> ClassDecl0;
	ExpBinary0 -> ExpId7;
	ExpBinary0 -> Less0;
	ExpBinary0 -> ExpNumber1;
}

