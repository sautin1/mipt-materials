digraph {
	ordering = out;
	ExpLogic41 -> "Value61: true";
	ExpLogic40 -> "Value60: true";
	StatAssignId91 -> ExpId392;
	StatAssignId91 -> ExpLogic40;
	ExpId392 -> "Id392: ntb";
	StatBraces17 -> StatList39;
	ExpList76 -> ExpMethod77;
	ExpId391 -> "Id391: GetRight";
	ExpId390 -> "Id390: node";
	ExpId389 -> "Id389: RecPrint";
	ExpMethod76 -> ExpThis12;
	ExpMethod76 -> ExpId389;
	ExpMethod76 -> ExpList76;
	StatConditional19 -> ExpMethod75;
	StatConditional19 -> StatBraces17;
	StatConditional19 -> StatAssignId91;
	ExpId387 -> "Id387: GetHas_Right";
	StatPrint8 -> ExpMethod74;
	ExpMethod74 -> ExpId384;
	ExpMethod74 -> ExpId385;
	ExpMethod74 -> ExpList74;
	ExpId384 -> "Id384: node";
	StatList37 -> StatConditional18;
	StatList37 -> StatPrint8;
	StatList37 -> StatConditional19;
	ExpLogic39 -> "Value59: true";
	ExpId383 -> "Id383: ntb";
	StatBraces16 -> StatList38;
	StatList38 -> StatAssignId88;
	ExpList72 -> ExpMethod73;
	ExpId382 -> "Id382: GetLeft";
	ExpMethod73 -> ExpId381;
	ExpMethod73 -> ExpId382;
	ExpMethod73 -> ExpList73;
	ExpId380 -> "Id380: RecPrint";
	ExpMethod72 -> ExpThis11;
	ExpMethod72 -> ExpId380;
	ExpMethod72 -> ExpList72;
	StatAssignId88 -> ExpId379;
	StatAssignId88 -> ExpMethod72;
	ExpId378 -> "Id378: GetHas_Left";
	ExpMethod71 -> ExpId377;
	ExpMethod71 -> ExpId378;
	ExpMethod71 -> ExpList71;
	ExpId377 -> "Id377: node";
	ExpId376 -> "Id376: ntb";
	ExpId375 -> "Id375: node";
	MethArg17 -> TypeModId20;
	MethArg17 -> ExpId375;
	ExpId373 -> "Id373: RecPrint";
	MethDecl20 -> AccessModPublic20;
	MethDecl20 -> TypeModBool32;
	MethDecl20 -> ExpId373;
	MethDecl20 -> MethArgList20;
	MethDecl20 -> VarDeclList22;
	MethDecl20 -> StatList37;
	MethDecl20 -> ExpLogic41;
	ExpLogic38 -> "Value58: true";
	ExpList70 -> ExpId372;
	ExpId371 -> "Id371: RecPrint";
	StatAssignId87 -> ExpId370;
	StatAssignId87 -> ExpMethod70;
	StatList36 -> StatAssignId86;
	StatList36 -> StatAssignId87;
	ExpId368 -> "Id368: ntb";
	VarDecl33 -> TypeModBool31;
	VarDecl33 -> ExpId368;
	VarDeclList21 -> VarDecl32;
	VarDeclList21 -> VarDecl33;
	TypeModId19 -> ExpId366;
	ExpId365 -> "Id365: Print";
	MethDecl19 -> AccessModPublic19;
	MethDecl19 -> TypeModBool30;
	MethDecl19 -> ExpId365;
	MethDecl19 -> MethArgList19;
	MethDecl19 -> VarDeclList21;
	MethDecl19 -> StatList36;
	MethDecl19 -> ExpLogic38;
	ExpId364 -> "Id364: ifound";
	ExpMethod29 -> ExpId175;
	ExpMethod29 -> ExpId176;
	ExpMethod29 -> ExpList29;
	ExpId175 -> "Id175: current_node";
	ExpList6 -> ExpNumber4;
	StatAssignId38 -> ExpId171;
	StatAssignId38 -> ExpMethod28;
	ExpId341 -> "Id341: ifound";
	ExpId169 -> "Id169: GetRight";
	StatConditional4 -> ExpMethod26;
	StatConditional4 -> StatAssignId36;
	StatConditional4 -> StatBraces4;
	ExpId166 -> "Id166: GetHas_Right";
	ExpMethod26 -> ExpId165;
	ExpMethod26 -> ExpId166;
	ExpMethod26 -> ExpList26;
	ExpId165 -> "Id165: current_node";
	ExpId10 -> "Id10: root";
	ExpId162 -> "Id162: current_node";
	ExpId245 -> "Id245: GetHas_Left";
	MethArg0 -> TypeModInt3;
	MethArg0 -> ExpId74;
	ExpId168 -> "Id168: current_node";
	ExpId25 -> "Id25: root";
	ExpId344 -> "Id344: current_node";
	ExpMethod24 -> ExpId159;
	ExpMethod24 -> ExpId160;
	ExpMethod24 -> ExpList24;
	StatAssignId34 -> ExpId158;
	StatAssignId34 -> ExpMethod24;
	ExpId61 -> "Id61: root";
	ExpId158 -> "Id158: ntb";
	StatAssignId72 -> ExpId320;
	StatAssignId72 -> ExpId321;
	ExpId314 -> "Id314: ntb";
	ExpMethod23 -> ExpId155;
	ExpMethod23 -> ExpId156;
	ExpMethod23 -> ExpList23;
	StatWhileLoop3 -> ExpMethod58;
	StatWhileLoop3 -> StatBraces13;
	StatList8 -> StatAssignId19;
	ExpMethod22 -> ExpId152;
	ExpMethod22 -> ExpId153;
	ExpMethod22 -> ExpList22;
	StatAssignId22 -> ExpId118;
	StatAssignId22 -> ExpLogic8;
	ExpId313 -> "Id313: GetHas_Left";
	ExpId152 -> "Id152: current_node";
	ExpId84 -> "Id84: SetLeft";
	ExpId385 -> "Id385: GetKey";
	ExpId151 -> "Id151: key_aux";
	ExpId242 -> "Id242: auxkey1";
	StatAssignId31 -> ExpId147;
	StatAssignId31 -> ExpMethod21;
	MethArgList10 -> MethArg4;
	ExpId146 -> "Id146: cont";
	ExpMethod75 -> ExpId386;
	ExpMethod75 -> ExpId387;
	ExpMethod75 -> ExpList75;
	ExpLogic12 -> "Value30: true";
	StatAssignId30 -> ExpId145;
	StatAssignId30 -> ExpLogic12;
	StatBraces2 -> StatList17;
	StatPrint5 -> ExpMethod15;
	StatAssignId29 -> ExpId144;
	StatAssignId29 -> ExpThis0;
	VarDecl8 -> TypeModId3;
	VarDecl8 -> ExpId72;
	ExpId81 -> "Id81: rn";
	ExpId112 -> "Id112: val";
	ExpId246 -> "Id246: ntb";
	StatAssignId28 -> ExpId140;
	StatAssignId28 -> ExpMethod20;
	ExpMethod43 -> ExpId257;
	ExpMethod43 -> ExpId258;
	ExpMethod43 -> ExpList43;
	ExpMethod28 -> ExpId172;
	ExpMethod28 -> ExpId173;
	ExpMethod28 -> ExpList28;
	ExpNewId2 -> ExpId139;
	ExpId78 -> "Id78: has_right";
	ExpId137 -> "Id137: current_node";
	StatAssignId33 -> ExpId157;
	StatAssignId33 -> ExpLogic13;
	VarDecl15 -> TypeModId9;
	VarDecl15 -> ExpId137;
	ExpId136 -> "Id136: Tree";
	ExpId135 -> "Id135: key_aux";
	MethArg5 -> TypeModBool12;
	MethArg5 -> ExpId110;
	TypeModId8 -> ExpId131;
	MethArgList13 -> MethArg8;
	ExpMethod35 -> ExpId219;
	ExpMethod35 -> ExpId220;
	ExpMethod35 -> ExpList35;
	MethArg8 -> TypeModInt9;
	MethArg8 -> ExpId130;
	ExpId290 -> "Id290: SetKey";
	ExpId154 -> "Id154: current_node";
	ExpId128 -> "Id128: ntb";
	VarDecl3 -> TypeModId1;
	VarDecl3 -> ExpId65;
	StatAssignId25 -> ExpId126;
	StatAssignId25 -> ExpLogic10;
	ExpId281 -> "Id281: Tree";
	ExpId130 -> "Id130: v_key";
	TypeModId20 -> ExpId374;
	StatConditional2 -> ExpBinary3;
	StatConditional2 -> StatBraces1;
	StatConditional2 -> StatBraces3;
	ExpId155 -> "Id155: current_node";
	ExpBinary2 -> ExpId124;
	ExpBinary2 -> Less1;
	ExpBinary2 -> ExpId125;
	ExpId320 -> "Id320: p_node";
	ExpMethod9 -> ExpId37;
	ExpMethod9 -> ExpId38;
	ExpMethod9 -> ExpList9;
	StatAssignId60 -> ExpId256;
	StatAssignId60 -> ExpMethod43;
	ExpId121 -> "Id121: num1";
	VarDeclList18 -> VarDecl26;
	ExpId116 -> "Id116: ntb";
	VarDecl9 -> TypeModBool14;
	VarDecl9 -> ExpId116;
	VarDecl11 -> TypeModId8;
	VarDecl11 -> ExpId132;
	ExpMethod44 -> ExpMethod45;
	ExpMethod44 -> ExpId262;
	ExpMethod44 -> ExpList45;
	ExpId304 -> "Id304: p_node";
	ExpId3 -> "Id3: Start";
	ExpId115 -> "Id115: num2";
	ExpList16 -> ExpNumber13;
	MethArg6 -> TypeModInt6;
	MethArg6 -> ExpId114;
	MethDecl12 -> AccessModPublic12;
	MethDecl12 -> TypeModBool13;
	MethDecl12 -> ExpId113;
	MethDecl12 -> MethArgList12;
	MethDecl12 -> VarDeclList14;
	MethDecl12 -> StatList13;
	MethDecl12 -> ExpId128;
	ExpMethod20 -> ExpId141;
	ExpMethod20 -> ExpId142;
	ExpMethod20 -> ExpList20;
	ExpLogic7 -> "Value24: true";
	ExpId126 -> "Id126: ntb";
	StatAssignId21 -> ExpId111;
	StatAssignId21 -> ExpId112;
	ExpLogic16 -> "Value34: true";
	MethArgList11 -> MethArg5;
	ExpNewId0 -> ExpId2;
	ExpLogic6 -> "Value23: true";
	StatConditional8 -> ExpMethod33;
	StatConditional8 -> StatBraces7;
	StatConditional8 -> StatAssignId51;
	ExpId303 -> "Id303: ntb";
	StatList11 -> StatAssignId20;
	StatAssignId10 -> ExpId39;
	StatAssignId10 -> ExpMethod10;
	StatAssignId20 -> ExpId107;
	StatAssignId20 -> ExpId108;
	ExpId256 -> "Id256: auxkey1";
	ExpId106 -> "Id106: val";
	StatAssignId61 -> ExpId259;
	StatAssignId61 -> ExpMethod44;
	ExpLogic15 -> "Value33: false";
	ExpId44 -> "Id44: Print";
	ExpId183 -> "Id183: parent_node";
	MethDecl9 -> AccessModPublic9;
	MethDecl9 -> TypeModBool8;
	MethDecl9 -> ExpId103;
	MethDecl9 -> MethArgList9;
	MethDecl9 -> VarDeclList11;
	MethDecl9 -> StatList10;
	MethDecl9 -> ExpId104;
	ExpId100 -> "Id100: v_key";
	StatAssignId19 -> ExpId99;
	StatAssignId19 -> ExpId100;
	ExpId230 -> "Id230: parent_node";
	ExpLogic19 -> "Value37: false";
	ExpId99 -> "Id99: key";
	MethArgList7 -> MethArg3;
	MethArg2 -> TypeModId5;
	MethArg2 -> ExpId86;
	ExpId174 -> "Id174: ntb";
	ExpId98 -> "Id98: v_key";
	MethArg3 -> TypeModInt5;
	MethArg3 -> ExpId98;
	VarDecl32 -> TypeModId19;
	VarDecl32 -> ExpId367;
	StatPrint7 -> ExpMethod19;
	ExpNumber17 -> "Value26: 1";
	ExpMethod40 -> ExpThis5;
	ExpMethod40 -> ExpId247;
	ExpMethod40 -> ExpList40;
	VarDeclList15 -> VarDecl11;
	VarDeclList15 -> VarDecl12;
	VarDeclList15 -> VarDecl13;
	VarDeclList15 -> VarDecl14;
	VarDeclList15 -> VarDecl15;
	ExpId92 -> "Id92: Tree";
	VarDecl23 -> TypeModBool24;
	VarDecl23 -> ExpId241;
	ExpId91 -> "Id91: right";
	StatAssignId17 -> ExpId82;
	StatAssignId17 -> ExpId83;
	ExpId160 -> "Id160: SetHas_Left";
	ExpId11 -> "Id11: Tree";
	ExpId335 -> "Id335: ifound";
	ExpId90 -> "Id90: GetRight";
	StatConditional0 -> ExpBinary1;
	StatConditional0 -> StatAssignId24;
	StatConditional0 -> StatConditional1;
	ExpId27 -> "Id27: ntb";
	ExpNegate2 -> ExpMethod36;
	TypeModId6 -> ExpId89;
	StatAssignId62 -> ExpId266;
	StatAssignId62 -> ExpMethod47;
	ExpId89 -> "Id89: Tree";
	ExpId182 -> "Id182: Tree";
	ExpId122 -> "Id122: num2";
	ExpId315 -> "Id315: c_node";
	ExpLogic13 -> "Value31: false";
	StatWhileLoop0 -> ExpId146;
	StatWhileLoop0 -> StatBraces0;
	ExpId26 -> "Id26: Insert";
	StatAssignId80 -> ExpId350;
	StatAssignId80 -> ExpMethod67;
	StatList35 -> StatAssignId84;
	StatList35 -> StatAssignId85;
	ExpLogic8 -> "Value25: false";
	ExpId185 -> "Id185: found";
	ExpId87 -> "Id87: left";
	ExpId15 -> "Id15: ntb";
	ExpId278 -> "Id278: p_node";
	ExpId86 -> "Id86: ln";
	ExpId85 -> "Id85: Tree";
	ExpId241 -> "Id241: ntb";
	ExpId300 -> "Id300: p_node";
	MethDecl3 -> AccessModPublic3;
	MethDecl3 -> TypeModBool5;
	MethDecl3 -> ExpId84;
	MethDecl3 -> MethArgList3;
	MethDecl3 -> VarDeclList5;
	MethDecl3 -> StatList4;
	MethDecl3 -> ExpLogic4;
	ExpId201 -> "Id201: GetHas_Left";
	ExpLogic3 -> "Value20: true";
	ExpBinary5 -> ExpId208;
	ExpBinary5 -> Less4;
	ExpBinary5 -> ExpId209;
	StatList3 -> StatAssignId17;
	ExpId366 -> "Id366: Tree";
	ExpId88 -> "Id88: ln";
	ExpId134 -> "Id134: cont";
	ExpLogic22 -> "Value40: false";
	MethDecl11 -> AccessModPublic11;
	MethDecl11 -> TypeModBool11;
	MethDecl11 -> ExpId109;
	MethDecl11 -> MethArgList11;
	MethDecl11 -> VarDeclList13;
	MethDecl11 -> StatList12;
	MethDecl11 -> ExpLogic7;
	ExpBinary0 -> ExpId120;
	ExpBinary0 -> Plus0;
	ExpBinary0 -> ExpNumber17;
	ExpId83 -> "Id83: rn";
	ExpId29 -> "Id29: Insert";
	StatAssignId37 -> ExpId170;
	StatAssignId37 -> ExpLogic15;
	ExpId145 -> "Id145: cont";
	ExpMethod17 -> ExpId56;
	ExpMethod17 -> ExpId57;
	ExpMethod17 -> ExpList17;
	StatAssignId36 -> ExpId167;
	StatAssignId36 -> ExpMethod27;
	MethArgList3 -> MethArg2;
	ExpId319 -> "Id319: GetKey";
	StatBraces15 -> StatList35;
	ExpId40 -> "Id40: root";
	StatAssignId9 -> ExpId36;
	StatAssignId9 -> ExpMethod9;
	ExpId5 -> "Id5: Start";
	StatAssignId49 -> ExpId212;
	StatAssignId49 -> ExpId213;
	ExpId150 -> "Id150: v_key";
	ExpNumber12 -> "Value12: 50";
	ExpId267 -> "Id267: p_node";
	ExpId114 -> "Id114: num1";
	MethDecl4 -> AccessModPublic4;
	MethDecl4 -> TypeModId6;
	MethDecl4 -> ExpId90;
	MethDecl4 -> MethArgList4;
	MethDecl4 -> VarDeclList6;
	MethDecl4 -> StatList5;
	MethDecl4 -> ExpId91;
	ExpList8 -> ExpNumber6;
	ExpId34 -> "Id34: root";
	StatAssignId89 -> ExpId383;
	StatAssignId89 -> ExpLogic39;
	MethDecl7 -> AccessModPublic7;
	MethDecl7 -> TypeModBool6;
	MethDecl7 -> ExpId97;
	MethDecl7 -> MethArgList7;
	MethDecl7 -> VarDeclList9;
	MethDecl7 -> StatList8;
	MethDecl7 -> ExpLogic5;
	ExpId204 -> "Id204: current_node";
	ExpId283 -> "Id283: Tree";
	ExpMethod3 -> ExpId19;
	ExpMethod3 -> ExpId20;
	ExpMethod3 -> ExpList3;
	ExpId374 -> "Id374: Tree";
	ExpId351 -> "Id351: current_node";
	ExpId262 -> "Id262: GetKey";
	ExpId37 -> "Id37: root";
	ExpId69 -> "Id69: has_left";
	ExpBinary3 -> ExpId150;
	ExpBinary3 -> Less2;
	ExpBinary3 -> ExpId151;
	TypeModId0 -> ExpId6;
	StatPrint6 -> ExpMethod16;
	VarDecl7 -> TypeModBool2;
	VarDecl7 -> ExpId70;
	StatAssignId43 -> ExpId192;
	StatAssignId43 -> ExpLogic19;
	ExpId124 -> "Id124: num1";
	MethDecl18 -> AccessModPublic18;
	MethDecl18 -> TypeModInt15;
	MethDecl18 -> ExpId332;
	MethDecl18 -> MethArgList18;
	MethDecl18 -> VarDeclList20;
	MethDecl18 -> StatList33;
	MethDecl18 -> ExpId364;
	ExpId41 -> "Id41: Insert";
	ExpId31 -> "Id31: root";
	ExpList28 -> ExpLogic16;
	ExpMethod18 -> ExpId59;
	ExpMethod18 -> ExpId60;
	ExpMethod18 -> ExpList18;
	ExpId372 -> "Id372: current_node";
	ExpLogic2 -> "Value19: true";
	ExpId30 -> "Id30: ntb";
	ExpId363 -> "Id363: cont";
	ExpId54 -> "Id54: Search";
	ExpId108 -> "Id108: val";
	ExpId266 -> "Id266: ntb";
	ExpId39 -> "Id39: ntb";
	VarDeclList22 -> VarDecl34;
	ExpId123 -> "Id123: ntb";
	StatAssignId14 -> ExpId75;
	StatAssignId14 -> ExpId76;
	StatAssignId0 -> ExpId10;
	StatAssignId0 -> ExpNewId1;
	StatAssignId40 -> ExpId189;
	StatAssignId40 -> ExpThis1;
	StatAssignId13 -> ExpId58;
	StatAssignId13 -> ExpMethod18;
	ExpNumber5 -> "Value5: 12";
	ExpId171 -> "Id171: ntb";
	StatAssignId57 -> ExpId234;
	StatAssignId57 -> ExpLogic26;
	ExpList5 -> ExpNumber3;
	ExpMethod48 -> ExpId271;
	ExpMethod48 -> ExpId272;
	ExpMethod48 -> ExpList48;
	ExpId104 -> "Id104: has_left";
	ExpLogic10 -> "Value28: false";
	ExpId117 -> "Id117: nti";
	ExpId196 -> "Id196: current_node";
	TypeModId4 -> ExpId80;
	ExpMethod49 -> ExpId274;
	ExpMethod49 -> ExpId275;
	ExpMethod49 -> ExpList49;
	VarDecl28 -> TypeModBool29;
	VarDecl28 -> ExpId334;
	ExpList10 -> ExpNumber8;
	ExpId23 -> "Id23: Print";
	ExpId24 -> "Id24: ntb";
	ExpId206 -> "Id206: GetLeft";
	ExpId173 -> "Id173: SetHas_Right";
	ExpId95 -> "Id95: GetKey";
	ExpId46 -> "Id46: Search";
	ExpId238 -> "Id238: p_node";
	ExpList3 -> ExpNumber2;
	StatAssignId7 -> ExpId30;
	StatAssignId7 -> ExpMethod7;
	TypeModId17 -> ExpId309;
	StatAssignId4 -> ExpId21;
	StatAssignId4 -> ExpMethod4;
	StatConditional9 -> ExpId218;
	StatConditional9 -> StatConditional10;
	StatConditional9 -> StatAssignId54;
	VarDecl12 -> TypeModBool16;
	VarDecl12 -> ExpId133;
	ExpId72 -> "Id72: my_null";
	ExpId45 -> "Id45: root";
	StatConditional1 -> ExpNegate0;
	StatConditional1 -> StatAssignId25;
	StatConditional1 -> StatAssignId26;
	ExpId62 -> "Id62: Search";
	ExpId317 -> "Id317: c_node";
	ExpMethod4 -> ExpId22;
	ExpMethod4 -> ExpId23;
	ExpMethod4 -> ExpList4;
	ExpId43 -> "Id43: root";
	ExpId63 -> "Id63: Tree";
	ExpLogic9 -> "Value27: false";
	ExpMethod25 -> ExpId162;
	ExpMethod25 -> ExpId163;
	ExpMethod25 -> ExpList25;
	ExpMethod1 -> ExpId13;
	ExpMethod1 -> ExpId14;
	ExpMethod1 -> ExpList1;
	ClassDecl0 -> ExpId4;
	ClassDecl0 -> VarDeclList0;
	ClassDecl0 -> MethDeclList0;
	ExpId190 -> "Id190: parent_node";
	ExpMethod0 -> ExpNewId0;
	ExpMethod0 -> ExpId3;
	ExpMethod0 -> ExpList0;
	ExpId386 -> "Id386: node";
	ExpId353 -> "Id353: cont";
	ExpLogic5 -> "Value22: true";
	ExpId118 -> "Id118: ntb";
	ExpId13 -> "Id13: root";
	VarDecl13 -> TypeModBool17;
	VarDecl13 -> ExpId134;
	ExpId144 -> "Id144: current_node";
	TypeModId7 -> ExpId92;
	StatAssignId35 -> ExpId161;
	StatAssignId35 -> ExpMethod25;
	ExpId202 -> "Id202: parent_node";
	TypeModId12 -> ExpId237;
	ExpMethod67 -> ExpId351;
	ExpMethod67 -> ExpId352;
	ExpMethod67 -> ExpList67;
	ExpId138 -> "Id138: new_node";
	ExpNumber4 -> "Value4: 4";
	ExpMethod12 -> ExpId45;
	ExpMethod12 -> ExpId46;
	ExpMethod12 -> ExpList12;
	StatList4 -> StatAssignId18;
	ExpId312 -> "Id312: c_node";
	StatList14 -> StatAssignId27;
	StatList14 -> StatAssignId28;
	StatList14 -> StatAssignId29;
	StatList14 -> StatAssignId30;
	StatList14 -> StatWhileLoop0;
	ExpId0 -> "Id0: BinaryTree";
	ExpId359 -> "Id359: current_node";
	StatAssignId32 -> ExpId154;
	StatAssignId32 -> ExpMethod23;
	StatAssignId11 -> ExpId42;
	StatAssignId11 -> ExpMethod11;
	ExpNumber6 -> "Value6: 20";
	ExpId1 -> "Id1: a";
	MainClass0 -> ExpId0;
	MainClass0 -> ExpId1;
	MainClass0 -> StatList0;
	ExpId192 -> "Id192: found";
	ExpId227 -> "Id227: current_node";
	ExpId217 -> "Id217: cont";
	ExpId28 -> "Id28: root";
	ExpId306 -> "Id306: RemoveLeft";
	ExpId38 -> "Id38: Insert";
	ExpId80 -> "Id80: Tree";
	ExpId305 -> "Id305: SetHas_Right";
	ExpId228 -> "Id228: ntb";
	ExpBinary8 -> ExpId354;
	ExpBinary8 -> Less6;
	ExpBinary8 -> ExpId355;
	ExpId20 -> "Id20: Insert";
	StatConditional7 -> ExpBinary5;
	StatConditional7 -> StatConditional8;
	StatConditional7 -> StatBraces8;
	ExpNumber9 -> "Value9: 24";
	ExpId17 -> "Id17: Print";
	ExpId19 -> "Id19: root";
	VarDeclList1 -> VarDecl0;
	VarDeclList1 -> VarDecl1;
	VarDeclList1 -> VarDecl2;
	MethArgList20 -> MethArg17;
	ExpId233 -> "Id233: cont";
	ExpId125 -> "Id125: nti";
	StatConditional13 -> ExpMethod46;
	StatConditional13 -> StatBraces10;
	StatConditional13 -> StatBraces11;
	ExpLogic4 -> "Value21: true";
	ExpId65 -> "Id65: left";
	ExpId157 -> "Id157: cont";
	Program0 -> MainClass0;
	Program0 -> ClassDeclList0;
	MethArg12 -> TypeModId14;
	MethArg12 -> ExpId282;
	ExpId42 -> "Id42: ntb";
	ExpId207 -> "Id207: cont";
	MethDeclList0 -> MethDecl0;
	ExpMethod33 -> ExpId210;
	ExpMethod33 -> ExpId211;
	ExpMethod33 -> ExpList33;
	ExpList38 -> ExpId230;
	ExpList38 -> ExpId231;
	StatAssignId76 -> ExpId339;
	StatAssignId76 -> ExpThis8;
	ExpId167 -> "Id167: current_node";
	ExpId107 -> "Id107: has_left";
	ExpId4 -> "Id4: BT";
	ExpId237 -> "Id237: Tree";
	ExpId7 -> "Id7: root";
	StatAssignId26 -> ExpId127;
	StatAssignId26 -> ExpLogic11;
	ExpId120 -> "Id120: num2";
	ExpId264 -> "Id264: auxkey1";
	ExpId170 -> "Id170: cont";
	StatPrint1 -> ExpNumber1;
	StatList0 -> StatPrint0;
	MethDecl6 -> AccessModPublic6;
	MethDecl6 -> TypeModInt4;
	MethDecl6 -> ExpId95;
	MethDecl6 -> MethArgList6;
	MethDecl6 -> VarDeclList8;
	MethDecl6 -> StatList7;
	MethDecl6 -> ExpId96;
	ExpId163 -> "Id163: SetLeft";
	ExpId331 -> "Id331: SetHas_Left";
	ExpList13 -> ExpNumber10;
	StatAssignId68 -> ExpId296;
	StatAssignId68 -> ExpMethod55;
	StatList1 -> StatAssignId0;
	StatList1 -> StatAssignId1;
	StatList1 -> StatAssignId2;
	StatList1 -> StatPrint1;
	StatList1 -> StatAssignId3;
	StatList1 -> StatAssignId4;
	StatList1 -> StatAssignId5;
	StatList1 -> StatAssignId6;
	StatList1 -> StatAssignId7;
	StatList1 -> StatAssignId8;
	StatList1 -> StatAssignId9;
	StatList1 -> StatAssignId10;
	StatList1 -> StatAssignId11;
	StatList1 -> StatPrint2;
	StatList1 -> StatPrint3;
	StatList1 -> StatPrint4;
	StatList1 -> StatPrint5;
	StatList1 -> StatPrint6;
	StatList1 -> StatAssignId12;
	StatList1 -> StatAssignId13;
	StatList1 -> StatPrint7;
	StatList13 -> StatAssignId22;
	StatList13 -> StatAssignId23;
	StatList13 -> StatConditional0;
	ExpLogic37 -> "Value57: false";
	MethArg4 -> TypeModBool10;
	MethArg4 -> ExpId106;
	ExpId105 -> "Id105: SetHas_Left";
	ExpId362 -> "Id362: ifound";
	VarDecl5 -> TypeModInt2;
	VarDecl5 -> ExpId68;
	StatAssignId8 -> ExpId33;
	StatAssignId8 -> ExpMethod8;
	ExpList1 -> ExpNumber0;
	ExpMethod10 -> ExpId40;
	ExpMethod10 -> ExpId41;
	ExpMethod10 -> ExpList10;
	ExpNumber7 -> "Value7: 28";
	ExpMethod7 -> ExpId31;
	ExpMethod7 -> ExpId32;
	ExpMethod7 -> ExpList7;
	ExpId369 -> "Id369: current_node";
	ExpId159 -> "Id159: current_node";
	ExpId239 -> "Id239: Tree";
	MethArgList2 -> MethArg1;
	StatAssignId1 -> ExpId12;
	StatAssignId1 -> ExpMethod1;
	ExpList42 -> ExpId254;
	ExpList42 -> ExpId255;
	ExpId259 -> "Id259: auxkey2";
	ExpId9 -> "Id9: nti";
	ExpId111 -> "Id111: has_right";
	ExpId49 -> "Id49: root";
	ExpNumber3 -> "Value3: 24";
	ExpNumber0 -> "Value0: 16";
	ExpMethod19 -> ExpId61;
	ExpMethod19 -> ExpId62;
	ExpMethod19 -> ExpList19;
	ExpId211 -> "Id211: GetHas_Right";
	ExpList46 -> ExpId264;
	ExpList46 -> ExpId265;
	StatAssignId23 -> ExpId119;
	StatAssignId23 -> ExpBinary0;
	StatAssignId77 -> ExpId340;
	StatAssignId77 -> ExpLogic34;
	ExpId21 -> "Id21: ntb";
	MethArg7 -> TypeModInt7;
	MethArg7 -> ExpId115;
	ExpList19 -> ExpNumber15;
	VarDecl24 -> TypeModInt13;
	VarDecl24 -> ExpId242;
	StatList30 -> StatAssignId66;
	StatList30 -> StatAssignId67;
	StatList30 -> StatAssignId68;
	VarDecl2 -> TypeModInt1;
	VarDecl2 -> ExpId9;
	ExpId2 -> "Id2: BT";
	ExpNumber1 -> "Value1: 100000000";
	ExpMethod2 -> ExpId16;
	ExpMethod2 -> ExpId17;
	ExpMethod2 -> ExpList2;
	ExpNumber15 -> "Value15: 12";
	StatPrint4 -> ExpMethod14;
	StatBraces10 -> StatList27;
	ExpId82 -> "Id82: right";
	StatList12 -> StatAssignId21;
	StatConditional12 -> ExpMethod41;
	StatConditional12 -> StatAssignId59;
	StatConditional12 -> StatBraces9;
	ExpMethod13 -> ExpId47;
	ExpMethod13 -> ExpId48;
	ExpMethod13 -> ExpList13;
	ExpList12 -> ExpNumber9;
	StatAssignId5 -> ExpId24;
	StatAssignId5 -> ExpMethod5;
	ExpLogic1 -> "Value18: false";
	ExpId140 -> "Id140: ntb";
	TypeModId2 -> ExpId66;
	ExpId47 -> "Id47: root";
	ExpId48 -> "Id48: Search";
	ExpMethod14 -> ExpId49;
	ExpMethod14 -> ExpId50;
	ExpMethod14 -> ExpList14;
	MethDecl2 -> AccessModPublic2;
	MethDecl2 -> TypeModBool4;
	MethDecl2 -> ExpId79;
	MethDecl2 -> MethArgList2;
	MethDecl2 -> VarDeclList4;
	MethDecl2 -> StatList3;
	MethDecl2 -> ExpLogic3;
	ExpId96 -> "Id96: key";
	ExpBinary6 -> ExpNegate1;
	ExpBinary6 -> And0;
	ExpBinary6 -> ExpNegate2;
	MethDecl16 -> AccessModPublic16;
	MethDecl16 -> TypeModBool25;
	MethDecl16 -> ExpId280;
	MethDecl16 -> MethArgList16;
	MethDecl16 -> VarDeclList18;
	MethDecl16 -> StatList29;
	MethDecl16 -> ExpLogic31;
	VarDecl10 -> TypeModInt8;
	VarDecl10 -> ExpId117;
	ExpId53 -> "Id53: root";
	ExpNumber10 -> "Value10: 12";
	ExpNegate0 -> ExpBinary2;
	ExpId22 -> "Id22: root";
	MethDecl13 -> AccessModPublic13;
	MethDecl13 -> TypeModBool15;
	MethDecl13 -> ExpId129;
	MethDecl13 -> MethArgList13;
	MethDecl13 -> VarDeclList15;
	MethDecl13 -> StatList14;
	MethDecl13 -> ExpLogic17;
	StatPrint3 -> ExpMethod13;
	ExpId337 -> "Id337: current_node";
	ExpNumber11 -> "Value11: 16";
	StatAssignId18 -> ExpId87;
	StatAssignId18 -> ExpId88;
	ExpId280 -> "Id280: RemoveRight";
	StatList15 -> StatAssignId31;
	StatList15 -> StatConditional2;
	ExpId336 -> "Id336: Tree";
	ExpId52 -> "Id52: Search";
	StatWhileLoop1 -> ExpId194;
	StatWhileLoop1 -> StatBraces5;
	ExpMethod16 -> ExpId53;
	ExpMethod16 -> ExpId54;
	ExpMethod16 -> ExpList16;
	ExpId18 -> "Id18: ntb";
	StatList18 -> StatConditional4;
	ExpId8 -> "Id8: ntb";
	ExpId263 -> "Id263: Compare";
	ExpId55 -> "Id55: ntb";
	ExpMethod27 -> ExpId168;
	ExpMethod27 -> ExpId169;
	ExpMethod27 -> ExpList27;
	MethDecl10 -> AccessModPublic10;
	MethDecl10 -> TypeModBool9;
	MethDecl10 -> ExpId105;
	MethDecl10 -> MethArgList10;
	MethDecl10 -> VarDeclList12;
	MethDecl10 -> StatList11;
	MethDecl10 -> ExpLogic6;
	ExpId32 -> "Id32: Insert";
	ExpId195 -> "Id195: key_aux";
	ExpId338 -> "Id338: key_aux";
	StatAssignId12 -> ExpId55;
	StatAssignId12 -> ExpMethod17;
	ExpList37 -> ExpId226;
	ExpList37 -> ExpId227;
	ExpNumber8 -> "Value8: 14";
	ExpId147 -> "Id147: key_aux";
	VarDecl26 -> TypeModBool26;
	VarDecl26 -> ExpId285;
	ExpId318 -> "Id318: GetLeft";
	ExpId56 -> "Id56: root";
	ExpNumber2 -> "Value2: 8";
	MethDeclList1 -> MethDecl1;
	MethDeclList1 -> MethDecl2;
	MethDeclList1 -> MethDecl3;
	MethDeclList1 -> MethDecl4;
	MethDeclList1 -> MethDecl5;
	MethDeclList1 -> MethDecl6;
	MethDeclList1 -> MethDecl7;
	MethDeclList1 -> MethDecl8;
	MethDeclList1 -> MethDecl9;
	MethDeclList1 -> MethDecl10;
	MethDeclList1 -> MethDecl11;
	MethDeclList1 -> MethDecl12;
	MethDeclList1 -> MethDecl13;
	MethDeclList1 -> MethDecl14;
	MethDeclList1 -> MethDecl15;
	MethDeclList1 -> MethDecl16;
	MethDeclList1 -> MethDecl17;
	MethDeclList1 -> MethDecl18;
	MethDeclList1 -> MethDecl19;
	MethDeclList1 -> MethDecl20;
	ExpId161 -> "Id161: ntb";
	ExpLogic20 -> "Value38: true";
	ExpMethod55 -> ExpId297;
	ExpMethod55 -> ExpId298;
	ExpMethod55 -> ExpList55;
	ExpList25 -> ExpId164;
	ExpId326 -> "Id326: p_node";
	MethArgList12 -> MethArg6;
	MethArgList12 -> MethArg7;
	StatList2 -> StatAssignId14;
	StatList2 -> StatAssignId15;
	StatList2 -> StatAssignId16;
	ExpId57 -> "Id57: Delete";
	ExpList15 -> ExpNumber12;
	ExpId279 -> "Id279: SetHas_Right";
	ExpId59 -> "Id59: root";
	ExpId153 -> "Id153: GetHas_Left";
	ExpId103 -> "Id103: GetHas_Left";
	MethDecl8 -> AccessModPublic8;
	MethDecl8 -> TypeModBool7;
	MethDecl8 -> ExpId101;
	MethDecl8 -> MethArgList8;
	MethDecl8 -> VarDeclList10;
	MethDecl8 -> StatList9;
	MethDecl8 -> ExpId102;
	ExpId101 -> "Id101: GetHas_Right";
	ExpId139 -> "Id139: Tree";
	ExpId35 -> "Id35: Insert";
	StatList19 -> StatAssignId37;
	StatList19 -> StatAssignId38;
	StatList19 -> StatAssignId39;
	TypeModId13 -> ExpId239;
	ExpId102 -> "Id102: has_right";
	StatAssignId84 -> ExpId362;
	StatAssignId84 -> ExpNumber19;
	ExpNumber16 -> "Value16: 0";
	ExpMethod60 -> ExpMethod61;
	ExpMethod60 -> ExpId319;
	ExpMethod60 -> ExpList61;
	ExpId110 -> "Id110: val";
	ClassDeclList0 -> ClassDecl0;
	ClassDeclList0 -> ClassDecl1;
	ExpMethod6 -> ExpId28;
	ExpMethod6 -> ExpId29;
	ExpMethod6 -> ExpList6;
	TypeModId1 -> ExpId64;
	ExpId109 -> "Id109: SetHas_Right";
	ExpId308 -> "Id308: p_node";
	ClassDecl1 -> ExpId63;
	ClassDecl1 -> VarDeclList2;
	ClassDecl1 -> MethDeclList1;
	MethArg16 -> TypeModInt16;
	MethArg16 -> ExpId333;
	ExpBinary7 -> ExpId346;
	ExpBinary7 -> Less5;
	ExpBinary7 -> ExpId347;
	ExpId73 -> "Id73: Init";
	ExpId132 -> "Id132: new_node";
	ExpId142 -> "Id142: Init";
	ExpId67 -> "Id67: right";
	ExpList7 -> ExpNumber5;
	ExpId6 -> "Id6: Tree";
	MethArg9 -> TypeModInt11;
	MethArg9 -> ExpId179;
	StatAssignId2 -> ExpId15;
	StatAssignId2 -> ExpMethod2;
	ExpId68 -> "Id68: key";
	ExpId149 -> "Id149: GetKey";
	ExpId74 -> "Id74: v_key";
	VarDecl6 -> TypeModBool1;
	VarDecl6 -> ExpId69;
	ExpList9 -> ExpNumber7;
	MethArgList15 -> MethArg10;
	MethArgList15 -> MethArg11;
	MethArg11 -> TypeModId13;
	MethArg11 -> ExpId240;
	ExpId244 -> "Id244: c_node";
	ExpId191 -> "Id191: cont";
	ExpMethod41 -> ExpId250;
	ExpMethod41 -> ExpId251;
	ExpMethod41 -> ExpList41;
	ExpId70 -> "Id70: has_right";
	ExpMethod50 -> ExpId278;
	ExpMethod50 -> ExpId279;
	ExpMethod50 -> ExpList50;
	ExpId71 -> "Id71: Tree";
	ExpId94 -> "Id94: left";
	ExpList20 -> ExpId143;
	MethDecl5 -> AccessModPublic5;
	MethDecl5 -> TypeModId7;
	MethDecl5 -> ExpId93;
	MethDecl5 -> MethArgList5;
	MethDecl5 -> VarDeclList7;
	MethDecl5 -> StatList6;
	MethDecl5 -> ExpId94;
	StatAssignId6 -> ExpId27;
	StatAssignId6 -> ExpMethod6;
	ExpId79 -> "Id79: SetRight";
	ExpList14 -> ExpNumber11;
	VarDeclList2 -> VarDecl3;
	VarDeclList2 -> VarDecl4;
	VarDeclList2 -> VarDecl5;
	VarDeclList2 -> VarDecl6;
	VarDeclList2 -> VarDecl7;
	VarDeclList2 -> VarDecl8;
	MethDecl1 -> AccessModPublic1;
	MethDecl1 -> TypeModBool3;
	MethDecl1 -> ExpId73;
	MethDecl1 -> MethArgList1;
	MethDecl1 -> VarDeclList3;
	MethDecl1 -> StatList2;
	MethDecl1 -> ExpLogic2;
	ExpId258 -> "Id258: GetKey";
	MethArgList1 -> MethArg0;
	ExpId156 -> "Id156: GetLeft";
	ExpId193 -> "Id193: is_root";
	ExpNegate1 -> ExpMethod35;
	ExpId12 -> "Id12: ntb";
	ExpId282 -> "Id282: p_node";
	ExpId75 -> "Id75: key";
	StatWhileLoop4 -> ExpId342;
	StatWhileLoop4 -> StatBraces14;
	ExpId76 -> "Id76: v_key";
	ExpLogic32 -> "Value50: false";
	ExpId60 -> "Id60: Print";
	ExpMethod31 -> ExpId200;
	ExpMethod31 -> ExpId201;
	ExpMethod31 -> ExpList31;
	ExpId188 -> "Id188: ntb";
	ExpMethod8 -> ExpId34;
	ExpMethod8 -> ExpId35;
	ExpMethod8 -> ExpList8;
	TypeModId3 -> ExpId71;
	StatAssignId15 -> ExpId77;
	StatAssignId15 -> ExpLogic0;
	TypeModId5 -> ExpId85;
	ExpLogic0 -> "Value17: false";
	MethArg1 -> TypeModId4;
	MethArg1 -> ExpId81;
	ExpList29 -> ExpId177;
	MethArgList14 -> MethArg9;
	ExpMethod51 -> ExpId286;
	ExpMethod51 -> ExpId287;
	ExpMethod51 -> ExpList51;
	StatBraces3 -> StatList18;
	ExpId251 -> "Id251: GetHas_Right";
	ExpId164 -> "Id164: new_node";
	MethDecl14 -> AccessModPublic14;
	MethDecl14 -> TypeModBool18;
	MethDecl14 -> ExpId178;
	MethDecl14 -> MethArgList14;
	MethDecl14 -> VarDeclList16;
	MethDecl14 -> StatList20;
	MethDecl14 -> ExpId235;
	ExpId178 -> "Id178: Delete";
	VarDecl30 -> TypeModId18;
	VarDecl30 -> ExpId337;
	ExpId179 -> "Id179: v_key";
	TypeModId10 -> ExpId180;
	ExpList56 -> ExpId302;
	VarDecl16 -> TypeModId10;
	VarDecl16 -> ExpId181;
	ExpId181 -> "Id181: current_node";
	ExpId113 -> "Id113: Compare";
	VarDeclList16 -> VarDecl16;
	VarDeclList16 -> VarDecl17;
	VarDeclList16 -> VarDecl18;
	VarDeclList16 -> VarDecl19;
	VarDeclList16 -> VarDecl20;
	VarDeclList16 -> VarDecl21;
	VarDeclList16 -> VarDecl22;
	ExpId58 -> "Id58: ntb";
	TypeModId11 -> ExpId182;
	VarDecl17 -> TypeModId11;
	VarDecl17 -> ExpId183;
	VarDecl18 -> TypeModBool19;
	VarDecl18 -> ExpId184;
	ExpId184 -> "Id184: cont";
	ExpId93 -> "Id93: GetLeft";
	ExpId224 -> "Id224: ntb";
	VarDecl20 -> TypeModBool21;
	VarDecl20 -> ExpId186;
	ExpId186 -> "Id186: is_root";
	StatAssignId69 -> ExpId299;
	StatAssignId69 -> ExpMethod56;
	ExpId187 -> "Id187: key_aux";
	VarDecl19 -> TypeModBool20;
	VarDecl19 -> ExpId185;
	VarDecl22 -> TypeModBool22;
	VarDecl22 -> ExpId188;
	ExpId381 -> "Id381: node";
	ExpId325 -> "Id325: ntb";
	ExpId189 -> "Id189: current_node";
	StatList20 -> StatAssignId40;
	StatList20 -> StatAssignId41;
	StatList20 -> StatAssignId42;
	StatList20 -> StatAssignId43;
	StatList20 -> StatAssignId44;
	StatList20 -> StatWhileLoop1;
	ExpId327 -> "Id327: SetLeft";
	StatAssignId42 -> ExpId191;
	StatAssignId42 -> ExpLogic18;
	ExpLogic18 -> "Value36: true";
	ExpMethod34 -> ExpId215;
	ExpMethod34 -> ExpId216;
	ExpMethod34 -> ExpList34;
	StatAssignId44 -> ExpId193;
	StatAssignId44 -> ExpLogic20;
	ExpLogic14 -> "Value32: true";
	ExpId235 -> "Id235: found";
	ExpId176 -> "Id176: SetRight";
	ExpId194 -> "Id194: cont";
	ExpMethod30 -> ExpId196;
	ExpMethod30 -> ExpId197;
	ExpMethod30 -> ExpList30;
	ExpMethod77 -> ExpId390;
	ExpMethod77 -> ExpId391;
	ExpMethod77 -> ExpList77;
	ExpMethod46 -> ExpThis7;
	ExpMethod46 -> ExpId263;
	ExpMethod46 -> ExpList46;
	ExpId197 -> "Id197: GetKey";
	ExpId253 -> "Id253: RemoveRight";
	StatList21 -> StatAssignId45;
	StatList21 -> StatConditional5;
	StatList21 -> StatAssignId57;
	ExpId198 -> "Id198: v_key";
	ExpId277 -> "Id277: ntb";
	ExpId220 -> "Id220: GetHas_Right";
	ExpBinary4 -> ExpId198;
	ExpBinary4 -> Less3;
	ExpBinary4 -> ExpId199;
	ExpId199 -> "Id199: key_aux";
	StatAssignId90 -> ExpId388;
	StatAssignId90 -> ExpMethod76;
	ExpId141 -> "Id141: new_node";
	StatConditional5 -> ExpBinary4;
	StatConditional5 -> StatConditional6;
	StatConditional5 -> StatConditional7;
	ExpId200 -> "Id200: current_node";
	StatConditional6 -> ExpMethod31;
	StatConditional6 -> StatBraces6;
	StatConditional6 -> StatAssignId48;
	StatAssignId46 -> ExpId202;
	StatAssignId46 -> ExpId203;
	ExpId203 -> "Id203: current_node";
	StatAssignId65 -> ExpId277;
	StatAssignId65 -> ExpMethod50;
	StatAssignId78 -> ExpId341;
	StatAssignId78 -> ExpNumber18;
	StatPrint0 -> ExpMethod0;
	ExpId16 -> "Id16: root";
	StatAssignId47 -> ExpId204;
	StatAssignId47 -> ExpMethod32;
	ExpId51 -> "Id51: root";
	ExpMethod32 -> ExpId205;
	ExpMethod32 -> ExpId206;
	ExpMethod32 -> ExpList32;
	ExpId257 -> "Id257: c_node";
	ExpMethod57 -> ExpId304;
	ExpMethod57 -> ExpId305;
	ExpMethod57 -> ExpList57;
	ExpId309 -> "Id309: Tree";
	ExpId324 -> "Id324: GetLeft";
	StatAssignId48 -> ExpId207;
	StatAssignId48 -> ExpLogic21;
	ExpLogic21 -> "Value39: false";
	StatList39 -> StatAssignId90;
	StatAssignId63 -> ExpId270;
	StatAssignId63 -> ExpMethod48;
	ExpId208 -> "Id208: key_aux";
	ExpId209 -> "Id209: v_key";
	ExpId287 -> "Id287: GetHas_Right";
	ExpId210 -> "Id210: current_node";
	ExpMethod61 -> ExpId317;
	ExpMethod61 -> ExpId318;
	ExpMethod61 -> ExpList60;
	ExpId77 -> "Id77: has_left";
	ExpId212 -> "Id212: parent_node";
	StatAssignId70 -> ExpId303;
	StatAssignId70 -> ExpMethod57;
	ExpId213 -> "Id213: current_node";
	StatList29 -> StatWhileLoop2;
	StatList29 -> StatAssignId69;
	StatList29 -> StatAssignId70;
	ExpMethod68 -> ExpId356;
	ExpMethod68 -> ExpId357;
	ExpMethod68 -> ExpList68;
	ExpId388 -> "Id388: ntb";
	StatList23 -> StatAssignId49;
	StatList23 -> StatAssignId50;
	StatAssignId50 -> ExpId214;
	StatAssignId50 -> ExpMethod34;
	ExpId215 -> "Id215: current_node";
	StatAssignId41 -> ExpId190;
	StatAssignId41 -> ExpThis2;
	ExpId216 -> "Id216: GetRight";
	StatBraces7 -> StatList23;
	ExpId284 -> "Id284: c_node";
	StatAssignId51 -> ExpId217;
	StatAssignId51 -> ExpLogic22;
	ExpId342 -> "Id342: cont";
	ExpId218 -> "Id218: is_root";
	StatList32 -> StatAssignId71;
	StatList32 -> StatAssignId72;
	StatList32 -> StatAssignId73;
	TypeModId9 -> ExpId136;
	ExpId219 -> "Id219: current_node";
	ExpId221 -> "Id221: current_node";
	StatWhileLoop2 -> ExpMethod51;
	StatWhileLoop2 -> StatBraces12;
	ExpMethod36 -> ExpId221;
	ExpMethod36 -> ExpId222;
	ExpMethod36 -> ExpList36;
	ExpId370 -> "Id370: ntb";
	ExpId222 -> "Id222: GetHas_Left";
	StatConditional10 -> ExpBinary6;
	StatConditional10 -> StatAssignId52;
	StatConditional10 -> StatAssignId53;
	StatList27 -> StatAssignId62;
	StatList27 -> StatAssignId63;
	ExpId64 -> "Id64: Tree";
	StatAssignId52 -> ExpId223;
	StatAssignId52 -> ExpLogic23;
	VarDecl29 -> TypeModInt17;
	VarDecl29 -> ExpId335;
	ExpLogic23 -> "Value41: true";
	StatAssignId53 -> ExpId224;
	StatAssignId53 -> ExpMethod37;
	StatBraces4 -> StatList19;
	ExpMethod37 -> ExpThis3;
	ExpMethod37 -> ExpId225;
	ExpMethod37 -> ExpList37;
	ExpId205 -> "Id205: current_node";
	TypeModId15 -> ExpId283;
	ExpId225 -> "Id225: Remove";
	ExpMethod38 -> ExpThis4;
	ExpMethod38 -> ExpId229;
	ExpMethod38 -> ExpList38;
	ExpMethod56 -> ExpId300;
	ExpMethod56 -> ExpId301;
	ExpMethod56 -> ExpList56;
	ExpId229 -> "Id229: Remove";
	ExpId231 -> "Id231: current_node";
	StatAssignId73 -> ExpId322;
	StatAssignId73 -> ExpMethod62;
	StatList24 -> StatConditional9;
	StatList24 -> StatAssignId55;
	StatList24 -> StatAssignId56;
	StatList16 -> StatConditional3;
	ExpId232 -> "Id232: found";
	ExpId340 -> "Id340: cont";
	ExpLogic24 -> "Value42: true";
	StatAssignId56 -> ExpId233;
	StatAssignId56 -> ExpLogic25;
	VarDecl14 -> TypeModInt10;
	VarDecl14 -> ExpId135;
	ExpId234 -> "Id234: is_root";
	ExpLogic26 -> "Value44: false";
	ExpId297 -> "Id297: c_node";
	StatBraces5 -> StatList21;
	MethDecl15 -> AccessModPublic15;
	MethDecl15 -> TypeModBool23;
	MethDecl15 -> ExpId236;
	MethDecl15 -> MethArgList15;
	MethDecl15 -> VarDeclList17;
	MethDecl15 -> StatList25;
	MethDecl15 -> ExpLogic29;
	ExpId33 -> "Id33: ntb";
	ExpId286 -> "Id286: c_node";
	StatBraces12 -> StatList30;
	ExpId236 -> "Id236: Remove";
	ExpId133 -> "Id133: ntb";
	MethArg10 -> TypeModId12;
	MethArg10 -> ExpId238;
	VarDecl34 -> TypeModBool33;
	VarDecl34 -> ExpId376;
	ExpId240 -> "Id240: c_node";
	ExpMethod53 -> ExpMethod54;
	ExpMethod53 -> ExpId293;
	ExpMethod53 -> ExpList54;
	VarDeclList17 -> VarDecl23;
	VarDeclList17 -> VarDecl24;
	VarDeclList17 -> VarDecl25;
	VarDecl25 -> TypeModInt14;
	VarDecl25 -> ExpId243;
	ExpId243 -> "Id243: auxkey2";
	ExpId252 -> "Id252: ntb";
	ExpId379 -> "Id379: ntb";
	ExpMethod39 -> ExpId244;
	ExpMethod39 -> ExpId245;
	ExpMethod39 -> ExpList39;
	StatBraces1 -> StatList16;
	StatConditional11 -> ExpMethod39;
	StatConditional11 -> StatAssignId58;
	StatConditional11 -> StatConditional12;
	StatAssignId58 -> ExpId246;
	StatAssignId58 -> ExpMethod40;
	ExpId367 -> "Id367: current_node";
	ExpId260 -> "Id260: p_node";
	StatAssignId71 -> ExpId314;
	StatAssignId71 -> ExpMethod59;
	ExpId247 -> "Id247: RemoveLeft";
	ExpId248 -> "Id248: p_node";
	ExpId50 -> "Id50: Search";
	ExpId295 -> "Id295: c_node";
	ExpId214 -> "Id214: current_node";
	StatBraces0 -> StatList15;
	VarDecl31 -> TypeModInt18;
	VarDecl31 -> ExpId338;
	ExpMethod11 -> ExpId43;
	ExpMethod11 -> ExpId44;
	ExpMethod11 -> ExpList11;
	ExpList40 -> ExpId248;
	ExpList40 -> ExpId249;
	ExpId249 -> "Id249: c_node";
	ExpLogic25 -> "Value43: false";
	StatAssignId59 -> ExpId252;
	StatAssignId59 -> ExpMethod42;
	ExpMethod21 -> ExpId148;
	ExpMethod21 -> ExpId149;
	ExpMethod21 -> ExpList21;
	ExpMethod42 -> ExpThis6;
	ExpMethod42 -> ExpId253;
	ExpMethod42 -> ExpList42;
	ExpId254 -> "Id254: p_node";
	ExpMethod45 -> ExpId260;
	ExpMethod45 -> ExpId261;
	ExpMethod45 -> ExpList44;
	ExpId261 -> "Id261: GetLeft";
	StatConditional18 -> ExpMethod71;
	StatConditional18 -> StatBraces16;
	StatConditional18 -> StatAssignId89;
	ExpId265 -> "Id265: auxkey2";
	ExpMethod5 -> ExpId25;
	ExpMethod5 -> ExpId26;
	ExpMethod5 -> ExpList5;
	StatAssignId83 -> ExpId361;
	StatAssignId83 -> ExpLogic36;
	StatAssignId16 -> ExpId78;
	StatAssignId16 -> ExpLogic1;
	ExpMethod47 -> ExpId267;
	ExpMethod47 -> ExpId268;
	ExpMethod47 -> ExpList47;
	VarDecl0 -> TypeModId0;
	VarDecl0 -> ExpId7;
	ExpId268 -> "Id268: SetLeft";
	ExpId269 -> "Id269: my_null";
	ExpList47 -> ExpId269;
	ExpId270 -> "Id270: ntb";
	ExpList24 -> ExpLogic14;
	ExpId271 -> "Id271: p_node";
	ExpId36 -> "Id36: ntb";
	ExpId250 -> "Id250: c_node";
	ExpId272 -> "Id272: SetHas_Left";
	ExpId334 -> "Id334: cont";
	StatAssignId54 -> ExpId228;
	StatAssignId54 -> ExpMethod38;
	ExpList48 -> ExpLogic27;
	ExpId273 -> "Id273: ntb";
	StatAssignId64 -> ExpId273;
	StatAssignId64 -> ExpMethod49;
	ExpId274 -> "Id274: p_node";
	ExpId275 -> "Id275: SetRight";
	ExpList49 -> ExpId276;
	StatList28 -> StatAssignId64;
	StatList28 -> StatAssignId65;
	MethDecl0 -> AccessModPublic0;
	MethDecl0 -> TypeModInt0;
	MethDecl0 -> ExpId5;
	MethDecl0 -> MethArgList0;
	MethDecl0 -> VarDeclList1;
	MethDecl0 -> StatList1;
	MethDecl0 -> ExpNumber16;
	ExpId345 -> "Id345: GetKey";
	StatAssignId55 -> ExpId232;
	StatAssignId55 -> ExpLogic24;
	ExpLogic28 -> "Value46: false";
	ExpList50 -> ExpLogic28;
	ExpId131 -> "Id131: Tree";
	ExpId347 -> "Id347: key_aux";
	StatBraces11 -> StatList28;
	StatBraces9 -> StatList26;
	StatList25 -> StatConditional11;
	ExpLogic29 -> "Value47: true";
	VarDeclList14 -> VarDecl9;
	VarDeclList14 -> VarDecl10;
	ExpId333 -> "Id333: v_key";
	ExpId143 -> "Id143: v_key";
	TypeModId14 -> ExpId281;
	ExpId172 -> "Id172: current_node";
	MethArgList16 -> MethArg12;
	MethArgList16 -> MethArg13;
	ExpId226 -> "Id226: parent_node";
	MethArg13 -> TypeModId15;
	MethArg13 -> ExpId284;
	ExpId288 -> "Id288: ntb";
	StatAssignId66 -> ExpId288;
	StatAssignId66 -> ExpMethod52;
	ExpMethod70 -> ExpThis10;
	ExpMethod70 -> ExpId371;
	ExpMethod70 -> ExpList70;
	ExpId289 -> "Id289: c_node";
	ExpLogic30 -> "Value48: false";
	ExpMethod52 -> ExpId289;
	ExpMethod52 -> ExpId290;
	ExpMethod52 -> ExpList52;
	ExpId14 -> "Id14: Init";
	ExpId291 -> "Id291: c_node";
	ExpMethod54 -> ExpId291;
	ExpMethod54 -> ExpId292;
	ExpMethod54 -> ExpList53;
	ExpId292 -> "Id292: GetRight";
	ExpId293 -> "Id293: GetKey";
	StatBraces6 -> StatList22;
	StatAssignId82 -> ExpId358;
	StatAssignId82 -> ExpMethod69;
	StatList17 -> StatAssignId33;
	StatList17 -> StatAssignId34;
	StatList17 -> StatAssignId35;
	ExpId361 -> "Id361: cont";
	ExpList52 -> ExpMethod53;
	ExpId294 -> "Id294: p_node";
	StatAssignId67 -> ExpId294;
	StatAssignId67 -> ExpId295;
	ExpId296 -> "Id296: c_node";
	ExpId255 -> "Id255: c_node";
	ExpId298 -> "Id298: GetRight";
	VarDecl21 -> TypeModInt12;
	VarDecl21 -> ExpId187;
	ExpId299 -> "Id299: ntb";
	ExpId223 -> "Id223: ntb";
	ExpId301 -> "Id301: SetRight";
	StatAssignId74 -> ExpId325;
	StatAssignId74 -> ExpMethod63;
	ExpId302 -> "Id302: my_null";
	ExpId148 -> "Id148: current_node";
	ExpList57 -> ExpLogic30;
	ExpLogic31 -> "Value49: true";
	ExpNumber18 -> "Value53: 0";
	MethDecl17 -> AccessModPublic17;
	MethDecl17 -> TypeModBool27;
	MethDecl17 -> ExpId306;
	MethDecl17 -> MethArgList17;
	MethDecl17 -> VarDeclList19;
	MethDecl17 -> StatList31;
	MethDecl17 -> ExpLogic33;
	ExpId307 -> "Id307: Tree";
	ExpNumber14 -> "Value14: 12";
	TypeModId16 -> ExpId307;
	ExpId180 -> "Id180: Tree";
	StatList26 -> StatAssignId60;
	StatList26 -> StatAssignId61;
	StatList26 -> StatConditional13;
	MethArg14 -> TypeModId16;
	MethArg14 -> ExpId308;
	StatPrint2 -> ExpMethod12;
	MethArgList17 -> MethArg14;
	MethArgList17 -> MethArg15;
	ExpMethod66 -> ExpId348;
	ExpMethod66 -> ExpId349;
	ExpMethod66 -> ExpList66;
	MethArg15 -> TypeModId17;
	MethArg15 -> ExpId310;
	ExpId310 -> "Id310: c_node";
	VarDecl27 -> TypeModBool28;
	VarDecl27 -> ExpId311;
	ExpId119 -> "Id119: nti";
	ExpId356 -> "Id356: current_node";
	ExpId311 -> "Id311: ntb";
	VarDeclList19 -> VarDecl27;
	StatConditional16 -> ExpBinary8;
	StatConditional16 -> StatConditional17;
	StatConditional16 -> StatBraces15;
	ExpMethod58 -> ExpId312;
	ExpMethod58 -> ExpId313;
	ExpMethod58 -> ExpList58;
	ExpMethod59 -> ExpId315;
	ExpMethod59 -> ExpId316;
	ExpMethod59 -> ExpList59;
	ExpId316 -> "Id316: SetKey";
	VarDecl1 -> TypeModBool0;
	VarDecl1 -> ExpId8;
	ExpNumber13 -> "Value13: 12";
	ExpList59 -> ExpMethod60;
	ExpLogic11 -> "Value29: true";
	ExpId321 -> "Id321: c_node";
	ExpId322 -> "Id322: c_node";
	StatBraces8 -> StatList24;
	ExpId323 -> "Id323: c_node";
	ExpMethod62 -> ExpId323;
	ExpMethod62 -> ExpId324;
	ExpMethod62 -> ExpList62;
	ExpLogic27 -> "Value45: false";
	StatBraces13 -> StatList32;
	StatAssignId24 -> ExpId123;
	StatAssignId24 -> ExpLogic9;
	StatList31 -> StatWhileLoop3;
	StatList31 -> StatAssignId74;
	StatList31 -> StatAssignId75;
	ExpMethod63 -> ExpId326;
	ExpMethod63 -> ExpId327;
	ExpMethod63 -> ExpList63;
	StatConditional17 -> ExpMethod68;
	StatConditional17 -> StatAssignId82;
	StatConditional17 -> StatAssignId83;
	ExpId328 -> "Id328: my_null";
	ExpList63 -> ExpId328;
	ExpBinary1 -> ExpId121;
	ExpBinary1 -> Less0;
	ExpBinary1 -> ExpId122;
	ExpId329 -> "Id329: ntb";
	ExpMethod15 -> ExpId51;
	ExpMethod15 -> ExpId52;
	ExpMethod15 -> ExpList15;
	StatAssignId75 -> ExpId329;
	StatAssignId75 -> ExpMethod64;
	StatAssignId27 -> ExpId138;
	StatAssignId27 -> ExpNewId2;
	ExpId330 -> "Id330: p_node";
	ExpId360 -> "Id360: GetRight";
	ExpMethod64 -> ExpId330;
	ExpMethod64 -> ExpId331;
	ExpMethod64 -> ExpList64;
	ExpList64 -> ExpLogic32;
	ExpLogic33 -> "Value51: true";
	ExpId276 -> "Id276: my_null";
	ExpId349 -> "Id349: GetHas_Left";
	ExpId127 -> "Id127: ntb";
	ExpId285 -> "Id285: ntb";
	ExpId332 -> "Id332: Search";
	StatConditional3 -> ExpMethod22;
	StatConditional3 -> StatAssignId32;
	StatConditional3 -> StatBraces2;
	MethArgList18 -> MethArg16;
	VarDeclList20 -> VarDecl28;
	VarDeclList20 -> VarDecl29;
	VarDeclList20 -> VarDecl30;
	VarDeclList20 -> VarDecl31;
	StatAssignId3 -> ExpId18;
	StatAssignId3 -> ExpMethod3;
	ExpId339 -> "Id339: current_node";
	StatConditional15 -> ExpMethod66;
	StatConditional15 -> StatAssignId80;
	StatConditional15 -> StatAssignId81;
	StatList33 -> StatAssignId76;
	StatList33 -> StatAssignId77;
	StatList33 -> StatAssignId78;
	StatList33 -> StatWhileLoop4;
	StatList22 -> StatAssignId46;
	StatList22 -> StatAssignId47;
	ExpId343 -> "Id343: key_aux";
	ExpId129 -> "Id129: Insert";
	StatAssignId79 -> ExpId343;
	StatAssignId79 -> ExpMethod65;
	ExpId177 -> "Id177: new_node";
	ExpMethod65 -> ExpId344;
	ExpMethod65 -> ExpId345;
	ExpMethod65 -> ExpList65;
	StatList34 -> StatAssignId79;
	StatList34 -> StatConditional14;
	ExpLogic34 -> "Value52: true";
	ExpId346 -> "Id346: v_key";
	StatAssignId45 -> ExpId195;
	StatAssignId45 -> ExpMethod30;
	StatConditional14 -> ExpBinary7;
	StatConditional14 -> StatConditional15;
	StatConditional14 -> StatConditional16;
	StatAssignId86 -> ExpId369;
	StatAssignId86 -> ExpThis9;
	VarDecl4 -> TypeModId2;
	VarDecl4 -> ExpId67;
	ExpList17 -> ExpNumber14;
	ExpId348 -> "Id348: current_node";
	ExpId350 -> "Id350: current_node";
	ExpId352 -> "Id352: GetLeft";
	ExpNewId1 -> ExpId11;
	StatAssignId81 -> ExpId353;
	StatAssignId81 -> ExpLogic35;
	StatAssignId39 -> ExpId174;
	StatAssignId39 -> ExpMethod29;
	ExpLogic35 -> "Value54: false";
	ExpId354 -> "Id354: key_aux";
	ExpId355 -> "Id355: v_key";
	ExpId66 -> "Id66: Tree";
	TypeModId18 -> ExpId336;
	ExpLogic17 -> "Value35: true";
	ExpId357 -> "Id357: GetHas_Right";
	ExpId358 -> "Id358: current_node";
	ExpMethod69 -> ExpId359;
	ExpMethod69 -> ExpId360;
	ExpMethod69 -> ExpList69;
	ExpLogic36 -> "Value55: false";
	ExpId97 -> "Id97: SetKey";
	ExpNumber19 -> "Value56: 1";
	StatAssignId85 -> ExpId363;
	StatAssignId85 -> ExpLogic37;
	StatBraces14 -> StatList34;
}

