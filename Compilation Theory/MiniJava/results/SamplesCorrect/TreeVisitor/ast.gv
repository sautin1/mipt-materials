digraph {
	ordering = out;
	ExpId457 -> "Id457: Visitor";
	ExpNumber30 -> "Value72: 0";
	ExpNumber29 -> "Value71: 0";
	StatAssignId105 -> ExpId456;
	StatAssignId105 -> ExpNumber29;
	StatBraces21 -> StatList46;
	ExpList91 -> ExpThis17;
	ExpId455 -> "Id455: accept";
	ExpMethod91 -> ExpId454;
	ExpMethod91 -> ExpId455;
	ExpMethod91 -> ExpList91;
	ExpId454 -> "Id454: l";
	ExpId453 -> "Id453: nti";
	StatList46 -> StatAssignId103;
	StatList46 -> StatAssignId104;
	ExpId451 -> "Id451: n";
	ExpId449 -> "Id449: GetHas_Left";
	ExpId448 -> "Id448: n";
	ExpId447 -> "Id447: GetKey";
	ExpMethod88 -> ExpId446;
	ExpMethod88 -> ExpId447;
	ExpMethod88 -> ExpList88;
	ExpId446 -> "Id446: n";
	ExpId445 -> "Id445: nti";
	StatBraces20 -> StatList45;
	ExpId443 -> "Id443: r";
	ExpId441 -> "Id441: GetRight";
	ExpMethod86 -> ExpId440;
	ExpMethod86 -> ExpId441;
	ExpMethod86 -> ExpList86;
	ExpId440 -> "Id440: n";
	ExpMethod85 -> ExpId437;
	ExpMethod85 -> ExpId438;
	ExpMethod85 -> ExpList85;
	ExpId437 -> "Id437: n";
	VarDeclList27 -> VarDecl40;
	ExpId436 -> "Id436: nti";
	VarDecl40 -> TypeModInt24;
	VarDecl40 -> ExpId436;
	MethArgList23 -> MethArg20;
	MethArg20 -> TypeModId26;
	MethArg20 -> ExpId435;
	TypeModId26 -> ExpId434;
	ClassDecl3 -> ExpId432;
	ClassDecl3 -> VarDeclList26;
	ClassDecl3 -> MethDeclList3;
	ClassDecl3 -> ExpId457;
	MethDeclList2 -> MethDecl22;
	ExpNumber26 -> "Value68: 0";
	ExpId431 -> "Id431: nti";
	StatBraces19 -> StatList43;
	ExpList84 -> ExpThis15;
	ExpId430 -> "Id430: accept";
	ExpId429 -> "Id429: l";
	ExpNumber27 -> "Value69: 0";
	ExpId428 -> "Id428: nti";
	StatList43 -> StatAssignId97;
	StatList43 -> StatAssignId98;
	ExpMethod83 -> ExpId426;
	ExpMethod83 -> ExpId427;
	ExpMethod83 -> ExpList83;
	ExpId426 -> "Id426: n";
	ExpId425 -> "Id425: l";
	StatConditional21 -> ExpMethod82;
	StatConditional21 -> StatBraces19;
	StatConditional21 -> StatAssignId99;
	ExpId424 -> "Id424: GetHas_Left";
	StatList41 -> StatConditional20;
	StatList41 -> StatConditional21;
	StatAssignId99 -> ExpId431;
	StatAssignId99 -> ExpNumber26;
	ExpNumber25 -> "Value67: 0";
	StatAssignId96 -> ExpId422;
	StatAssignId96 -> ExpNumber25;
	ExpId422 -> "Id422: nti";
	StatBraces18 -> StatList42;
	ExpId421 -> "Id421: accept";
	ExpMethod81 -> ExpId420;
	ExpMethod81 -> ExpId421;
	ExpMethod81 -> ExpList81;
	StatAssignId95 -> ExpId419;
	StatAssignId95 -> ExpMethod81;
	ExpId419 -> "Id419: nti";
	StatList42 -> StatAssignId94;
	StatList42 -> StatAssignId95;
	ExpMethod80 -> ExpId417;
	ExpMethod80 -> ExpId418;
	ExpMethod80 -> ExpList80;
	ExpId417 -> "Id417: n";
	ExpId416 -> "Id416: r";
	StatConditional20 -> ExpMethod79;
	StatConditional20 -> StatBraces18;
	StatConditional20 -> StatAssignId96;
	ExpId412 -> "Id412: n";
	MethArg19 -> TypeModId25;
	MethArg19 -> ExpId412;
	StatAssignId101 -> ExpId442;
	StatAssignId101 -> ExpMethod87;
	ExpId411 -> "Id411: Tree";
	MethDecl22 -> AccessModPublic22;
	MethDecl22 -> TypeModInt21;
	MethDecl22 -> ExpId410;
	MethDecl22 -> MethArgList22;
	MethDecl22 -> VarDeclList25;
	MethDecl22 -> StatList41;
	MethDecl22 -> ExpNumber27;
	VarDeclList24 -> VarDecl37;
	VarDeclList24 -> VarDecl38;
	ExpId404 -> "Id404: visit";
	ExpId403 -> "Id403: v";
	StatAssignId93 -> ExpId402;
	StatAssignId93 -> ExpMethod78;
	ExpId402 -> "Id402: nti";
	StatList40 -> StatPrint12;
	StatList40 -> StatAssignId93;
	StatPrint12 -> ExpNumber23;
	VarDeclList23 -> VarDecl36;
	ExpId401 -> "Id401: nti";
	VarDecl36 -> TypeModInt20;
	VarDecl36 -> ExpId401;
	MethArgList21 -> MethArg18;
	TypeModId22 -> ExpId399;
	ExpId398 -> "Id398: accept";
	ExpLogic41 -> "Value64: true";
	ExpLogic40 -> "Value63: true";
	StatAssignId92 -> ExpId397;
	StatAssignId92 -> ExpLogic40;
	StatBraces17 -> StatList39;
	ExpList76 -> ExpMethod77;
	ExpId396 -> "Id396: GetRight";
	ExpId394 -> "Id394: RecPrint";
	ExpMethod76 -> ExpThis12;
	ExpMethod76 -> ExpId394;
	ExpMethod76 -> ExpList76;
	StatAssignId91 -> ExpId393;
	StatAssignId91 -> ExpMethod76;
	ExpId438 -> "Id438: GetHas_Right";
	StatConditional19 -> ExpMethod75;
	StatConditional19 -> StatBraces17;
	StatConditional19 -> StatAssignId92;
	ExpId392 -> "Id392: GetHas_Right";
	ExpId391 -> "Id391: node";
	ExpId390 -> "Id390: GetKey";
	ExpMethod74 -> ExpId389;
	ExpMethod74 -> ExpId390;
	ExpMethod74 -> ExpList74;
	ExpId405 -> "Id405: Visitor";
	ExpId389 -> "Id389: node";
	StatList37 -> StatConditional18;
	StatList37 -> StatPrint11;
	StatList37 -> StatConditional19;
	ExpLogic39 -> "Value62: true";
	StatBraces16 -> StatList38;
	StatList38 -> StatAssignId89;
	StatAssignId103 -> ExpId450;
	StatAssignId103 -> ExpMethod90;
	ExpId413 -> "Id413: nti";
	ExpList72 -> ExpMethod73;
	ExpId387 -> "Id387: GetLeft";
	StatList45 -> StatAssignId100;
	StatList45 -> StatAssignId101;
	ExpMethod73 -> ExpId386;
	ExpMethod73 -> ExpId387;
	ExpMethod73 -> ExpList73;
	ExpMethod72 -> ExpThis11;
	ExpMethod72 -> ExpId385;
	ExpMethod72 -> ExpList72;
	MethArg18 -> TypeModId22;
	MethArg18 -> ExpId400;
	ExpId384 -> "Id384: ntb";
	ExpId383 -> "Id383: GetHas_Left";
	ExpMethod71 -> ExpId382;
	ExpMethod71 -> ExpId383;
	ExpMethod71 -> ExpList71;
	VarDecl35 -> TypeModBool33;
	VarDecl35 -> ExpId381;
	ExpId380 -> "Id380: node";
	MethArg17 -> TypeModId21;
	MethArg17 -> ExpId380;
	TypeModId21 -> ExpId379;
	ExpId378 -> "Id378: RecPrint";
	MethDecl20 -> AccessModPublic20;
	MethDecl20 -> TypeModBool32;
	MethDecl20 -> ExpId378;
	MethDecl20 -> MethArgList20;
	MethDecl20 -> VarDeclList22;
	MethDecl20 -> StatList37;
	MethDecl20 -> ExpLogic41;
	ExpLogic38 -> "Value61: true";
	ExpNumber28 -> "Value70: 0";
	ExpList70 -> ExpId377;
	ExpId377 -> "Id377: current_node";
	ExpId376 -> "Id376: RecPrint";
	StatAssignId88 -> ExpId375;
	StatAssignId88 -> ExpMethod70;
	ExpId375 -> "Id375: ntb";
	StatList36 -> StatAssignId87;
	StatList36 -> StatAssignId88;
	StatAssignId87 -> ExpId374;
	StatAssignId87 -> ExpThis9;
	ExpId373 -> "Id373: current_node";
	StatAssignId100 -> ExpId439;
	StatAssignId100 -> ExpMethod86;
	VarDeclList21 -> VarDecl33;
	VarDeclList21 -> VarDecl34;
	ExpId371 -> "Id371: ntb";
	VarDecl33 -> TypeModBool31;
	VarDecl33 -> ExpId371;
	MethDecl19 -> AccessModPublic19;
	MethDecl19 -> TypeModBool30;
	MethDecl19 -> ExpId370;
	MethDecl19 -> MethArgList19;
	MethDecl19 -> VarDeclList21;
	MethDecl19 -> StatList36;
	MethDecl19 -> ExpLogic38;
	StatBraces14 -> StatList34;
	ExpId368 -> "Id368: cont";
	StatList35 -> StatAssignId85;
	StatList35 -> StatAssignId86;
	ExpNumber22 -> "Value59: 1";
	StatAssignId85 -> ExpId367;
	StatAssignId85 -> ExpNumber22;
	ExpLogic36 -> "Value58: false";
	StatAssignId84 -> ExpId366;
	StatAssignId84 -> ExpLogic36;
	ExpId365 -> "Id365: GetRight";
	ExpMethod69 -> ExpId364;
	ExpMethod69 -> ExpId365;
	ExpMethod69 -> ExpList69;
	ExpId364 -> "Id364: current_node";
	ExpId175 -> "Id175: cont";
	ExpList6 -> ExpNumber5;
	StatConditional4 -> ExpMethod26;
	StatConditional4 -> StatAssignId37;
	StatConditional4 -> StatBraces4;
	ExpId433 -> "Id433: visit";
	ExpMethod26 -> ExpId170;
	ExpMethod26 -> ExpId171;
	ExpMethod26 -> ExpList26;
	ExpId400 -> "Id400: v";
	TypeModId19 -> ExpId339;
	ExpId10 -> "Id10: MyVisitor";
	ExpId169 -> "Id169: new_node";
	ExpId166 -> "Id166: ntb";
	ExpId168 -> "Id168: SetLeft";
	ExpId25 -> "Id25: Insert";
	VarDecl37 -> TypeModId23;
	VarDecl37 -> ExpId407;
	ExpId344 -> "Id344: current_node";
	ExpId165 -> "Id165: SetHas_Left";
	ExpMethod24 -> ExpId164;
	ExpMethod24 -> ExpId165;
	ExpMethod24 -> ExpList24;
	StatAssignId34 -> ExpId162;
	StatAssignId34 -> ExpLogic13;
	ExpId61 -> "Id61: root";
	ExpId162 -> "Id162: cont";
	ExpId245 -> "Id245: c_node";
	ExpNumber20 -> "Value29: 1";
	MethArg0 -> TypeModInt3;
	MethArg0 -> ExpId79;
	ExpMethod23 -> ExpId160;
	ExpMethod23 -> ExpId161;
	ExpMethod23 -> ExpList23;
	StatWhileLoop3 -> ExpMethod58;
	StatWhileLoop3 -> StatBraces13;
	ExpId158 -> "Id158: GetHas_Left";
	StatAssignId72 -> ExpId319;
	StatAssignId72 -> ExpMethod59;
	ExpMethod22 -> ExpId157;
	ExpMethod22 -> ExpId158;
	ExpMethod22 -> ExpList22;
	StatAssignId22 -> ExpId116;
	StatAssignId22 -> ExpId117;
	ExpId313 -> "Id313: p_node";
	StatBraces15 -> StatList35;
	ExpId319 -> "Id319: ntb";
	ExpId314 -> "Id314: Tree";
	StatList8 -> StatAssignId20;
	ExpId152 -> "Id152: key_aux";
	ExpId84 -> "Id84: SetRight";
	ExpId385 -> "Id385: RecPrint";
	ExpId151 -> "Id151: cont";
	ExpId242 -> "Id242: Tree";
	ExpMethod75 -> ExpId391;
	ExpMethod75 -> ExpId392;
	ExpMethod75 -> ExpList75;
	ExpLogic12 -> "Value33: true";
	StatAssignId31 -> ExpId150;
	StatAssignId31 -> ExpLogic12;
	MethArgList10 -> MethArg4;
	StatAssignId30 -> ExpId149;
	StatAssignId30 -> ExpThis0;
	VarDecl8 -> TypeModBool2;
	VarDecl8 -> ExpId75;
	ExpId246 -> "Id246: ntb";
	MethDecl23 -> AccessModPublic23;
	MethDecl23 -> TypeModInt23;
	MethDecl23 -> ExpId433;
	MethDecl23 -> MethArgList23;
	MethDecl23 -> VarDeclList27;
	MethDecl23 -> StatList44;
	MethDecl23 -> ExpNumber30;
	ExpId146 -> "Id146: new_node";
	StatBraces2 -> StatList17;
	StatPrint5 -> ExpMethod12;
	StatAssignId29 -> ExpId145;
	StatAssignId29 -> ExpMethod20;
	MethArg8 -> TypeModInt9;
	MethArg8 -> ExpId135;
	ExpId290 -> "Id290: ntb";
	StatAssignId28 -> ExpId143;
	StatAssignId28 -> ExpNewId3;
	ExpMethod43 -> ExpId262;
	ExpMethod43 -> ExpId263;
	ExpMethod43 -> ExpList43;
	ExpId81 -> "Id81: v_key";
	ExpId112 -> "Id112: has_left";
	ExpMethod82 -> ExpId423;
	ExpMethod82 -> ExpId424;
	ExpMethod82 -> ExpList82;
	StatAssignId33 -> ExpId159;
	StatAssignId33 -> ExpMethod23;
	VarDecl15 -> TypeModBool17;
	VarDecl15 -> ExpId141;
	ExpId137 -> "Id137: new_node";
	ExpId136 -> "Id136: Tree";
	MethArgList13 -> MethArg8;
	ExpMethod35 -> ExpId224;
	ExpMethod35 -> ExpId225;
	ExpMethod35 -> ExpList35;
	ExpId135 -> "Id135: v_key";
	MethArg5 -> TypeModBool12;
	MethArg5 -> ExpId115;
	ExpId154 -> "Id154: GetKey";
	ExpMethod87 -> ExpId443;
	ExpMethod87 -> ExpId444;
	ExpMethod87 -> ExpList87;
	ExpNumber21 -> "Value56: 0";
	TypeModId20 -> ExpId372;
	StatConditional2 -> ExpBinary3;
	StatConditional2 -> StatBraces1;
	StatConditional2 -> StatBraces3;
	ExpId130 -> "Id130: nti";
	ExpId155 -> "Id155: v_key";
	ExpBinary2 -> ExpId129;
	ExpBinary2 -> Less1;
	ExpBinary2 -> ExpId130;
	StatAssignId25 -> ExpId128;
	StatAssignId25 -> ExpLogic9;
	ExpId281 -> "Id281: my_null";
	ExpId128 -> "Id128: ntb";
	VarDecl3 -> TypeModId1;
	VarDecl3 -> ExpId11;
	ExpId320 -> "Id320: c_node";
	ExpMethod9 -> ExpId39;
	ExpMethod9 -> ExpId40;
	ExpMethod9 -> ExpList9;
	StatAssignId60 -> ExpId257;
	StatAssignId60 -> ExpMethod42;
	ExpId121 -> "Id121: ntb";
	VarDeclList18 -> VarDecl27;
	MethArg6 -> TypeModInt6;
	MethArg6 -> ExpId119;
	MethDecl12 -> AccessModPublic12;
	MethDecl12 -> TypeModBool13;
	MethDecl12 -> ExpId118;
	MethDecl12 -> MethArgList12;
	MethDecl12 -> VarDeclList14;
	MethDecl12 -> StatList13;
	MethDecl12 -> ExpId133;
	ExpMethod20 -> ExpId146;
	ExpMethod20 -> ExpId147;
	ExpMethod20 -> ExpList20;
	ExpLogic7 -> "Value27: true";
	ExpId116 -> "Id116: has_right";
	MethArgList11 -> MethArg5;
	ExpNewId0 -> ExpId2;
	ExpId3 -> "Id3: Start";
	ExpId115 -> "Id115: val";
	ExpList16 -> ExpNumber16;
	ExpLogic6 -> "Value26: true";
	StatConditional8 -> ExpMethod33;
	StatConditional8 -> StatBraces7;
	StatConditional8 -> StatAssignId52;
	ExpId303 -> "Id303: GetRight";
	StatList11 -> StatAssignId21;
	StatAssignId10 -> ExpId41;
	StatAssignId10 -> ExpMethod10;
	ExpId126 -> "Id126: num1";
	StatAssignId21 -> ExpId112;
	StatAssignId21 -> ExpId113;
	ExpId44 -> "Id44: v";
	ExpId183 -> "Id183: Delete";
	MethDecl9 -> AccessModPublic9;
	MethDecl9 -> TypeModBool8;
	MethDecl9 -> ExpId108;
	MethDecl9 -> MethArgList9;
	MethDecl9 -> VarDeclList11;
	MethDecl9 -> StatList10;
	MethDecl9 -> ExpId109;
	ExpId106 -> "Id106: GetHas_Right";
	StatAssignId61 -> ExpId261;
	StatAssignId61 -> ExpMethod43;
	StatAssignId20 -> ExpId104;
	StatAssignId20 -> ExpId105;
	ExpId256 -> "Id256: GetHas_Right";
	MethArgList7 -> MethArg3;
	MethArg2 -> TypeModId6;
	MethArg2 -> ExpId91;
	MethArg3 -> TypeModInt5;
	MethArg3 -> ExpId103;
	ExpId100 -> "Id100: GetKey";
	VarDeclList15 -> VarDecl12;
	VarDeclList15 -> VarDecl13;
	VarDeclList15 -> VarDecl14;
	VarDeclList15 -> VarDecl15;
	VarDeclList15 -> VarDecl16;
	ExpLogic19 -> "Value40: false";
	ExpId99 -> "Id99: left";
	ExpId174 -> "Id174: GetRight";
	ExpId98 -> "Id98: GetLeft";
	TypeModId8 -> ExpId97;
	VarDecl16 -> TypeModInt10;
	VarDecl16 -> ExpId142;
	ExpLogic13 -> "Value34: false";
	StatWhileLoop0 -> ExpId151;
	StatWhileLoop0 -> StatBraces0;
	ExpId26 -> "Id26: ntb";
	StatAssignId80 -> ExpId348;
	StatAssignId80 -> ExpMethod65;
	ExpLogic8 -> "Value28: false";
	ExpId185 -> "Id185: Tree";
	StatAssignId19 -> ExpId92;
	StatAssignId19 -> ExpId93;
	ExpId230 -> "Id230: Remove";
	ExpId92 -> "Id92: left";
	VarDecl23 -> TypeModInt12;
	VarDecl23 -> ExpId193;
	ExpId91 -> "Id91: ln";
	StatAssignId17 -> ExpId83;
	StatAssignId17 -> ExpLogic1;
	ExpId160 -> "Id160: current_node";
	ExpId11 -> "Id11: v";
	ExpId335 -> "Id335: p_node";
	ExpId90 -> "Id90: Tree";
	StatConditional0 -> ExpBinary1;
	StatConditional0 -> StatAssignId25;
	StatConditional0 -> StatConditional1;
	ExpId27 -> "Id27: root";
	ExpNegate2 -> ExpMethod36;
	StatAssignId62 -> ExpId264;
	StatAssignId62 -> ExpMethod44;
	ExpId89 -> "Id89: SetLeft";
	ExpId182 -> "Id182: new_node";
	ExpId122 -> "Id122: nti";
	ExpId315 -> "Id315: c_node";
	MethDecl3 -> AccessModPublic3;
	MethDecl3 -> TypeModBool5;
	MethDecl3 -> ExpId89;
	MethDecl3 -> MethArgList3;
	MethDecl3 -> VarDeclList5;
	MethDecl3 -> StatList4;
	MethDecl3 -> ExpLogic4;
	ExpId201 -> "Id201: current_node";
	ExpLogic3 -> "Value23: true";
	ExpBinary5 -> ExpId213;
	ExpBinary5 -> Less4;
	ExpBinary5 -> ExpId214;
	StatList3 -> StatAssignId18;
	ExpId366 -> "Id366: cont";
	ExpId88 -> "Id88: rn";
	ExpId87 -> "Id87: right";
	ExpId15 -> "Id15: root";
	ExpId278 -> "Id278: ntb";
	ExpId369 -> "Id369: ifound";
	ExpId159 -> "Id159: current_node";
	ExpId239 -> "Id239: is_root";
	MethArgList2 -> MethArg1;
	ExpId86 -> "Id86: rn";
	MethArg1 -> TypeModId5;
	MethArg1 -> ExpId86;
	ExpId85 -> "Id85: Tree";
	ExpId241 -> "Id241: Remove";
	ExpId300 -> "Id300: c_node";
	MethDecl2 -> AccessModPublic2;
	MethDecl2 -> TypeModBool4;
	MethDecl2 -> ExpId84;
	MethDecl2 -> MethArgList2;
	MethDecl2 -> VarDeclList4;
	MethDecl2 -> StatList3;
	MethDecl2 -> ExpLogic3;
	ExpId153 -> "Id153: current_node";
	ExpId103 -> "Id103: v_key";
	ExpId372 -> "Id372: Tree";
	ExpLogic2 -> "Value22: true";
	ExpId439 -> "Id439: r";
	ExpLogic1 -> "Value21: false";
	StatPrint13 -> ExpMethod88;
	ExpId140 -> "Id140: current_node";
	TypeModId2 -> ExpId69;
	ExpId134 -> "Id134: Insert";
	ExpLogic22 -> "Value43: false";
	MethDecl11 -> AccessModPublic11;
	MethDecl11 -> TypeModBool11;
	MethDecl11 -> ExpId114;
	MethDecl11 -> MethArgList11;
	MethDecl11 -> VarDeclList13;
	MethDecl11 -> StatList12;
	MethDecl11 -> ExpLogic7;
	ExpBinary0 -> ExpId125;
	ExpBinary0 -> Plus0;
	ExpBinary0 -> ExpNumber20;
	ExpId83 -> "Id83: has_right";
	ExpId29 -> "Id29: ntb";
	TypeModId5 -> ExpId85;
	ExpLogic0 -> "Value20: false";
	ExpId82 -> "Id82: has_left";
	StatAssignId37 -> ExpId172;
	StatAssignId37 -> ExpMethod27;
	ExpId145 -> "Id145: ntb";
	ExpMethod90 -> ExpId451;
	ExpMethod90 -> ExpId452;
	ExpMethod90 -> ExpList90;
	ExpMethod17 -> ExpId61;
	ExpMethod17 -> ExpId62;
	ExpMethod17 -> ExpList17;
	StatAssignId36 -> ExpId166;
	StatAssignId36 -> ExpMethod25;
	MethArgList3 -> MethArg2;
	ExpId40 -> "Id40: Insert";
	StatAssignId9 -> ExpId38;
	StatAssignId9 -> ExpMethod9;
	ExpId5 -> "Id5: Start";
	StatAssignId49 -> ExpId212;
	StatAssignId49 -> ExpLogic21;
	ExpId150 -> "Id150: cont";
	TypeModId10 -> ExpId139;
	ExpList56 -> ExpId307;
	VarDecl38 -> TypeModId24;
	VarDecl38 -> ExpId409;
	ExpNumber12 -> "Value12: 24";
	ExpId267 -> "Id267: GetKey";
	ExpId114 -> "Id114: SetHas_Right";
	MethDeclList3 -> MethDecl23;
	MethDecl4 -> AccessModPublic4;
	MethDecl4 -> TypeModId7;
	MethDecl4 -> ExpId95;
	MethDecl4 -> MethArgList4;
	MethDecl4 -> VarDeclList6;
	MethDecl4 -> StatList5;
	MethDecl4 -> ExpId96;
	ExpList8 -> ExpNumber7;
	VarDeclList25 -> VarDecl39;
	ExpId34 -> "Id34: Insert";
	ExpMethod3 -> ExpId21;
	ExpMethod3 -> ExpId22;
	ExpMethod3 -> ExpList3;
	ExpId410 -> "Id410: visit";
	ExpList4 -> ExpNumber3;
	ExpId283 -> "Id283: p_node";
	ExpId37 -> "Id37: Insert";
	ExpId69 -> "Id69: Tree";
	ExpBinary3 -> ExpId155;
	ExpBinary3 -> Less2;
	ExpBinary3 -> ExpId156;
	TypeModId0 -> ExpId6;
	StatPrint6 -> ExpMethod13;
	VarDecl7 -> TypeModBool1;
	VarDecl7 -> ExpId74;
	StatAssignId43 -> ExpId196;
	StatAssignId43 -> ExpLogic18;
	ExpId39 -> "Id39: root";
	VarDeclList22 -> VarDecl35;
	ExpId123 -> "Id123: ntb";
	StatAssignId14 -> ExpId63;
	StatAssignId14 -> ExpMethod18;
	StatAssignId0 -> ExpId12;
	StatAssignId0 -> ExpNewId1;
	StatAssignId40 -> ExpId179;
	StatAssignId40 -> ExpMethod29;
	StatAssignId13 -> ExpId60;
	StatAssignId13 -> ExpMethod17;
	ExpId171 -> "Id171: GetHas_Right";
	StatAssignId57 -> ExpId238;
	StatAssignId57 -> ExpLogic25;
	ExpNumber5 -> "Value5: 12";
	ExpId262 -> "Id262: c_node";
	ExpId78 -> "Id78: Init";
	ExpNewId2 -> ExpId45;
	ExpId124 -> "Id124: nti";
	ClassDecl2 -> ExpId405;
	ClassDecl2 -> VarDeclList24;
	ClassDecl2 -> MethDeclList2;
	MethDecl18 -> AccessModPublic18;
	MethDecl18 -> TypeModInt15;
	MethDecl18 -> ExpId337;
	MethDecl18 -> MethArgList18;
	MethDecl18 -> VarDeclList20;
	MethDecl18 -> StatList33;
	MethDecl18 -> ExpId369;
	ExpId41 -> "Id41: ntb";
	ExpId31 -> "Id31: Insert";
	ExpList11 -> ExpId49;
	ExpMethod18 -> ExpId64;
	ExpMethod18 -> ExpId65;
	ExpMethod18 -> ExpList18;
	ExpId30 -> "Id30: root";
	ExpId363 -> "Id363: current_node";
	ExpId54 -> "Id54: root";
	ExpId108 -> "Id108: GetHas_Left";
	ExpId266 -> "Id266: GetLeft";
	ExpList5 -> ExpNumber4;
	ExpMethod48 -> ExpId276;
	ExpMethod48 -> ExpId277;
	ExpMethod48 -> ExpList48;
	ExpId23 -> "Id23: ntb";
	ExpId43 -> "Id43: Print";
	ExpId63 -> "Id63: ntb";
	ExpLogic9 -> "Value30: false";
	ExpMethod25 -> ExpId167;
	ExpMethod25 -> ExpId168;
	ExpMethod25 -> ExpList25;
	ExpId104 -> "Id104: key";
	StatAssignId98 -> ExpId428;
	StatAssignId98 -> ExpMethod84;
	ExpLogic10 -> "Value31: false";
	ExpId395 -> "Id395: node";
	ExpId117 -> "Id117: val";
	ExpId196 -> "Id196: cont";
	TypeModId4 -> ExpId76;
	ExpMethod49 -> ExpId279;
	ExpMethod49 -> ExpId280;
	ExpMethod49 -> ExpList49;
	VarDecl28 -> TypeModBool28;
	VarDecl28 -> ExpId316;
	ExpId173 -> "Id173: current_node";
	ExpId95 -> "Id95: GetRight";
	ExpId399 -> "Id399: Visitor";
	ExpId46 -> "Id46: nti";
	ExpId238 -> "Id238: cont";
	ExpList3 -> ExpNumber2;
	StatAssignId7 -> ExpId32;
	StatAssignId7 -> ExpMethod7;
	TypeModId17 -> ExpId312;
	StatAssignId4 -> ExpId23;
	StatAssignId4 -> ExpMethod4;
	StatConditional9 -> ExpId223;
	StatConditional9 -> StatConditional10;
	StatConditional9 -> StatAssignId55;
	VarDecl12 -> TypeModId9;
	VarDecl12 -> ExpId137;
	ExpId72 -> "Id72: right";
	ExpId45 -> "Id45: MyVisitor";
	ExpMethod79 -> ExpId414;
	ExpMethod79 -> ExpId415;
	ExpMethod79 -> ExpList79;
	StatConditional1 -> ExpNegate0;
	StatConditional1 -> StatAssignId26;
	StatConditional1 -> StatAssignId27;
	ExpId62 -> "Id62: Delete";
	ExpId317 -> "Id317: c_node";
	ExpMethod4 -> ExpId24;
	ExpMethod4 -> ExpId25;
	ExpMethod4 -> ExpList4;
	ExpId24 -> "Id24: root";
	ExpMethod6 -> ExpId30;
	ExpMethod6 -> ExpId31;
	ExpMethod6 -> ExpList6;
	TypeModId1 -> ExpId10;
	ExpId110 -> "Id110: SetHas_Left";
	ClassDeclList0 -> ClassDecl0;
	ClassDeclList0 -> ClassDecl1;
	ClassDeclList0 -> ClassDecl2;
	ClassDeclList0 -> ClassDecl3;
	ExpMethod1 -> ExpId15;
	ExpMethod1 -> ExpId16;
	ExpMethod1 -> ExpList1;
	ClassDecl0 -> ExpId4;
	ClassDecl0 -> VarDeclList0;
	ClassDecl0 -> MethDeclList0;
	ExpId190 -> "Id190: found";
	ExpMethod0 -> ExpNewId0;
	ExpMethod0 -> ExpId3;
	ExpMethod0 -> ExpList0;
	ExpId386 -> "Id386: node";
	ExpId353 -> "Id353: current_node";
	ExpId13 -> "Id13: Tree";
	VarDecl13 -> TypeModBool16;
	VarDecl13 -> ExpId138;
	ExpId144 -> "Id144: Tree";
	TypeModId7 -> ExpId94;
	StatAssignId35 -> ExpId163;
	StatAssignId35 -> ExpMethod24;
	ExpId202 -> "Id202: GetKey";
	TypeModId12 -> ExpId187;
	ExpMethod67 -> ExpId356;
	ExpMethod67 -> ExpId357;
	ExpMethod67 -> ExpList67;
	ExpId138 -> "Id138: ntb";
	ExpNumber4 -> "Value4: 4";
	ExpMethod12 -> ExpId50;
	ExpMethod12 -> ExpId51;
	ExpMethod12 -> ExpList12;
	StatList4 -> StatAssignId19;
	ExpId312 -> "Id312: Tree";
	StatList14 -> StatAssignId28;
	StatList14 -> StatAssignId29;
	StatList14 -> StatAssignId30;
	StatList14 -> StatAssignId31;
	StatList14 -> StatWhileLoop0;
	ExpId0 -> "Id0: TreeVisitor";
	ExpId359 -> "Id359: key_aux";
	StatAssignId32 -> ExpId152;
	StatAssignId32 -> ExpMethod21;
	StatAssignId11 -> ExpId44;
	StatAssignId11 -> ExpNewId2;
	ExpNumber6 -> "Value6: 20";
	ExpId1 -> "Id1: a";
	ExpId418 -> "Id418: GetRight";
	MainClass0 -> ExpId0;
	MainClass0 -> ExpId1;
	MainClass0 -> StatList0;
	ExpId192 -> "Id192: is_root";
	ExpId227 -> "Id227: GetHas_Left";
	ExpId217 -> "Id217: parent_node";
	ExpId28 -> "Id28: Insert";
	ExpId306 -> "Id306: SetRight";
	ExpId305 -> "Id305: p_node";
	ExpId20 -> "Id20: ntb";
	ExpId409 -> "Id409: r";
	StatConditional7 -> ExpBinary5;
	StatConditional7 -> StatConditional8;
	StatConditional7 -> StatBraces8;
	ExpNumber9 -> "Value9: 100000000";
	ExpId17 -> "Id17: ntb";
	ExpId19 -> "Id19: Print";
	VarDeclList1 -> VarDecl0;
	VarDeclList1 -> VarDecl1;
	VarDeclList1 -> VarDecl2;
	VarDeclList1 -> VarDecl3;
	MethArgList20 -> MethArg17;
	ExpId233 -> "Id233: ntb";
	ExpId125 -> "Id125: num2";
	StatConditional13 -> ExpMethod46;
	StatConditional13 -> StatBraces10;
	StatConditional13 -> StatBraces11;
	ExpLogic4 -> "Value24: true";
	ExpId65 -> "Id65: Print";
	ExpId157 -> "Id157: current_node";
	Program0 -> MainClass0;
	Program0 -> ClassDeclList0;
	MethArg12 -> TypeModId15;
	MethArg12 -> ExpId287;
	ExpId42 -> "Id42: root";
	ExpId207 -> "Id207: parent_node";
	MethDeclList0 -> MethDecl0;
	ExpMethod33 -> ExpId215;
	ExpMethod33 -> ExpId216;
	ExpMethod33 -> ExpList33;
	ExpList38 -> ExpId235;
	ExpList38 -> ExpId236;
	StatAssignId76 -> ExpId334;
	StatAssignId76 -> ExpMethod64;
	ExpId80 -> "Id80: key";
	ExpId38 -> "Id38: ntb";
	StatAssignId89 -> ExpId384;
	StatAssignId89 -> ExpMethod72;
	ExpId204 -> "Id204: key_aux";
	MethDecl7 -> AccessModPublic7;
	MethDecl7 -> TypeModBool6;
	MethDecl7 -> ExpId102;
	MethDecl7 -> MethArgList7;
	MethDecl7 -> VarDeclList9;
	MethDecl7 -> StatList8;
	MethDecl7 -> ExpLogic5;
	ExpMethod40 -> ExpThis5;
	ExpMethod40 -> ExpId252;
	ExpMethod40 -> ExpList40;
	ExpId118 -> "Id118: Compare";
	ExpLogic5 -> "Value25: true";
	TypeModId6 -> ExpId90;
	ExpNumber18 -> "Value18: 12";
	ExpLogic31 -> "Value52: true";
	ExpId167 -> "Id167: current_node";
	ExpId107 -> "Id107: has_right";
	ExpId4 -> "Id4: TV";
	ExpId237 -> "Id237: found";
	ExpId7 -> "Id7: root";
	ExpLogic37 -> "Value60: false";
	StatList13 -> StatAssignId23;
	StatList13 -> StatAssignId24;
	StatList13 -> StatConditional0;
	ExpId408 -> "Id408: Tree";
	StatAssignId26 -> ExpId131;
	StatAssignId26 -> ExpLogic10;
	ExpId120 -> "Id120: num2";
	ExpId434 -> "Id434: Tree";
	ExpId264 -> "Id264: auxkey2";
	StatAssignId83 -> ExpId363;
	StatAssignId83 -> ExpMethod69;
	ExpMethod5 -> ExpId27;
	ExpMethod5 -> ExpId28;
	ExpMethod5 -> ExpList5;
	ExpId170 -> "Id170: current_node";
	StatPrint1 -> ExpNumber1;
	StatList0 -> StatPrint0;
	MethDecl6 -> AccessModPublic6;
	MethDecl6 -> TypeModInt4;
	MethDecl6 -> ExpId100;
	MethDecl6 -> MethArgList6;
	MethDecl6 -> VarDeclList8;
	MethDecl6 -> StatList7;
	MethDecl6 -> ExpId101;
	ExpId163 -> "Id163: ntb";
	ExpId331 -> "Id331: p_node";
	ExpList13 -> ExpNumber13;
	ExpId73 -> "Id73: key";
	ExpNumber7 -> "Value7: 28";
	ExpMethod7 -> ExpId33;
	ExpMethod7 -> ExpId34;
	ExpMethod7 -> ExpList7;
	ExpList1 -> ExpNumber0;
	ExpMethod10 -> ExpId42;
	ExpMethod10 -> ExpId43;
	ExpMethod10 -> ExpList10;
	StatAssignId1 -> ExpId14;
	StatAssignId1 -> ExpMethod1;
	ExpId259 -> "Id259: p_node";
	ExpList42 -> ExpId259;
	ExpList42 -> ExpId260;
	ExpId9 -> "Id9: nti";
	ExpId111 -> "Id111: val";
	ExpId49 -> "Id49: v";
	StatAssignId8 -> ExpId35;
	StatAssignId8 -> ExpMethod8;
	StatAssignId68 -> ExpId299;
	StatAssignId68 -> ExpId300;
	StatList1 -> StatAssignId0;
	StatList1 -> StatAssignId1;
	StatList1 -> StatAssignId2;
	StatList1 -> StatPrint1;
	StatList1 -> StatAssignId3;
	StatList1 -> StatAssignId4;
	StatList1 -> StatAssignId5;
	StatList1 -> StatAssignId6;
	StatList1 -> StatAssignId7;
	StatList1 -> StatAssignId8;
	StatList1 -> StatAssignId9;
	StatList1 -> StatAssignId10;
	StatList1 -> StatPrint2;
	StatList1 -> StatAssignId11;
	StatList1 -> StatPrint3;
	StatList1 -> StatAssignId12;
	StatList1 -> StatPrint4;
	StatList1 -> StatPrint5;
	StatList1 -> StatPrint6;
	StatList1 -> StatPrint7;
	StatList1 -> StatPrint8;
	StatList1 -> StatPrint9;
	StatList1 -> StatAssignId13;
	StatList1 -> StatAssignId14;
	StatList1 -> StatPrint10;
	MethArg4 -> TypeModBool10;
	MethArg4 -> ExpId111;
	ExpId105 -> "Id105: v_key";
	ExpId362 -> "Id362: GetHas_Right";
	VarDecl5 -> TypeModId3;
	VarDecl5 -> ExpId72;
	ExpNumber3 -> "Value3: 24";
	ExpNumber23 -> "Value65: 333";
	ExpNumber0 -> "Value0: 16";
	StatConditional22 -> ExpMethod85;
	StatConditional22 -> StatBraces20;
	StatConditional22 -> StatAssignId102;
	ExpMethod19 -> ExpId66;
	ExpMethod19 -> ExpId67;
	ExpMethod19 -> ExpList19;
	ExpId211 -> "Id211: GetLeft";
	StatList44 -> StatConditional22;
	StatList44 -> StatPrint13;
	StatList44 -> StatConditional23;
	ExpList46 -> ExpId269;
	ExpList46 -> ExpId270;
	ExpId414 -> "Id414: n";
	StatAssignId23 -> ExpId123;
	StatAssignId23 -> ExpLogic8;
	VarDecl2 -> TypeModInt1;
	VarDecl2 -> ExpId9;
	ExpNumber15 -> "Value15: 50";
	StatAssignId94 -> ExpId416;
	StatAssignId94 -> ExpMethod80;
	StatPrint4 -> ExpNumber11;
	StatBraces10 -> StatList27;
	StatAssignId77 -> ExpId344;
	StatAssignId77 -> ExpThis8;
	ExpId21 -> "Id21: root";
	MethArg7 -> TypeModInt7;
	MethArg7 -> ExpId120;
	ExpId407 -> "Id407: l";
	VarDecl24 -> TypeModBool24;
	VarDecl24 -> ExpId246;
	StatList30 -> StatAssignId67;
	StatList30 -> StatAssignId68;
	StatList30 -> StatAssignId69;
	ExpList19 -> ExpNumber18;
	ExpNumber1 -> "Value1: 100000000";
	ExpId2 -> "Id2: TV";
	ExpMethod2 -> ExpId18;
	ExpMethod2 -> ExpId19;
	ExpMethod2 -> ExpList2;
	ExpId206 -> "Id206: GetHas_Left";
	StatAssignId5 -> ExpId26;
	StatAssignId5 -> ExpMethod5;
	StatList12 -> StatAssignId22;
	StatConditional12 -> ExpMethod41;
	StatConditional12 -> StatAssignId60;
	StatConditional12 -> StatBraces9;
	ExpNegate0 -> ExpBinary2;
	ExpId22 -> "Id22: Insert";
	MethDecl13 -> AccessModPublic13;
	MethDecl13 -> TypeModBool15;
	MethDecl13 -> ExpId134;
	MethDecl13 -> MethArgList13;
	MethDecl13 -> VarDeclList15;
	MethDecl13 -> StatList14;
	MethDecl13 -> ExpLogic17;
	StatPrint3 -> ExpNumber10;
	TypeModId25 -> ExpId411;
	ExpId337 -> "Id337: Search";
	ExpMethod27 -> ExpId173;
	ExpMethod27 -> ExpId174;
	ExpMethod27 -> ExpList27;
	MethDecl10 -> AccessModPublic10;
	MethDecl10 -> TypeModBool9;
	MethDecl10 -> ExpId110;
	MethDecl10 -> MethArgList10;
	MethDecl10 -> VarDeclList12;
	MethDecl10 -> StatList11;
	MethDecl10 -> ExpLogic6;
	ExpId32 -> "Id32: ntb";
	ExpId195 -> "Id195: parent_node";
	ExpNumber24 -> "Value66: 0";
	ExpId338 -> "Id338: v_key";
	StatAssignId12 -> ExpId46;
	StatAssignId12 -> ExpMethod11;
	ExpMethod89 -> ExpId448;
	ExpMethod89 -> ExpId449;
	ExpMethod89 -> ExpList89;
	ExpList37 -> ExpId231;
	ExpList37 -> ExpId232;
	ExpId47 -> "Id47: root";
	ExpId397 -> "Id397: ntb";
	ExpId48 -> "Id48: accept";
	TypeModId24 -> ExpId408;
	ExpMethod14 -> ExpId54;
	ExpMethod14 -> ExpId55;
	ExpMethod14 -> ExpList14;
	ExpNumber11 -> "Value11: 100000000";
	StatAssignId18 -> ExpId87;
	StatAssignId18 -> ExpId88;
	ExpId280 -> "Id280: SetRight";
	ExpMethod13 -> ExpId52;
	ExpMethod13 -> ExpId53;
	ExpMethod13 -> ExpList13;
	ExpId101 -> "Id101: key";
	MethDecl8 -> AccessModPublic8;
	MethDecl8 -> TypeModBool7;
	MethDecl8 -> ExpId106;
	MethDecl8 -> MethArgList8;
	MethDecl8 -> VarDeclList10;
	MethDecl8 -> StatList9;
	MethDecl8 -> ExpId107;
	StatWhileLoop1 -> ExpId199;
	StatWhileLoop1 -> StatBraces5;
	ExpList12 -> ExpNumber12;
	StatList15 -> StatAssignId32;
	StatList15 -> StatConditional2;
	ExpId336 -> "Id336: SetHas_Left";
	ExpId52 -> "Id52: root";
	ExpId96 -> "Id96: right";
	VarDecl10 -> TypeModBool14;
	VarDecl10 -> ExpId121;
	ExpId53 -> "Id53: Search";
	ExpNumber10 -> "Value10: 50000000";
	ExpBinary6 -> ExpNegate1;
	ExpBinary6 -> And0;
	ExpBinary6 -> ExpNegate2;
	MethDecl16 -> AccessModPublic16;
	MethDecl16 -> TypeModBool25;
	MethDecl16 -> ExpId285;
	MethDecl16 -> MethArgList16;
	MethDecl16 -> VarDeclList18;
	MethDecl16 -> StatList29;
	MethDecl16 -> ExpLogic31;
	ExpId18 -> "Id18: root";
	ExpList87 -> ExpThis16;
	StatList18 -> StatConditional4;
	ExpId8 -> "Id8: ntb";
	ExpId263 -> "Id263: GetKey";
	ExpMethod84 -> ExpId429;
	ExpMethod84 -> ExpId430;
	ExpMethod84 -> ExpList84;
	ExpId55 -> "Id55: Search";
	ExpList25 -> ExpId169;
	ExpId326 -> "Id326: c_node";
	ExpId420 -> "Id420: r";
	MethArgList12 -> MethArg6;
	MethArgList12 -> MethArg7;
	StatList2 -> StatAssignId15;
	StatList2 -> StatAssignId16;
	StatList2 -> StatAssignId17;
	ExpId97 -> "Id97: Tree";
	ExpNumber19 -> "Value19: 0";
	ExpNumber8 -> "Value8: 14";
	ExpId147 -> "Id147: Init";
	VarDecl26 -> TypeModInt14;
	VarDecl26 -> ExpId248;
	ExpId318 -> "Id318: GetHas_Left";
	TypeModId23 -> ExpId406;
	ExpId56 -> "Id56: root";
	MethDeclList1 -> MethDecl1;
	MethDeclList1 -> MethDecl2;
	MethDeclList1 -> MethDecl3;
	MethDeclList1 -> MethDecl4;
	MethDeclList1 -> MethDecl5;
	MethDeclList1 -> MethDecl6;
	MethDeclList1 -> MethDecl7;
	MethDeclList1 -> MethDecl8;
	MethDeclList1 -> MethDecl9;
	MethDeclList1 -> MethDecl10;
	MethDeclList1 -> MethDecl11;
	MethDeclList1 -> MethDecl12;
	MethDeclList1 -> MethDecl13;
	MethDeclList1 -> MethDecl14;
	MethDeclList1 -> MethDecl15;
	MethDeclList1 -> MethDecl16;
	MethDeclList1 -> MethDecl17;
	MethDeclList1 -> MethDecl18;
	MethDeclList1 -> MethDecl19;
	MethDeclList1 -> MethDecl20;
	MethDeclList1 -> MethDecl21;
	ExpId161 -> "Id161: GetLeft";
	ExpLogic20 -> "Value41: true";
	ExpMethod55 -> ExpId302;
	ExpMethod55 -> ExpId303;
	ExpMethod55 -> ExpList55;
	ExpNumber2 -> "Value2: 8";
	StatPrint8 -> ExpMethod15;
	ExpLogic21 -> "Value42: false";
	StatList39 -> StatAssignId91;
	StatAssignId63 -> ExpId271;
	StatAssignId63 -> ExpMethod47;
	ExpId76 -> "Id76: Tree";
	ExpLogic32 -> "Value53: false";
	ExpMethod16 -> ExpId58;
	ExpMethod16 -> ExpId59;
	ExpMethod16 -> ExpList16;
	ExpId57 -> "Id57: Search";
	ExpList15 -> ExpNumber15;
	ExpId279 -> "Id279: p_node";
	ExpId59 -> "Id59: Search";
	TypeModId13 -> ExpId242;
	ExpId102 -> "Id102: SetKey";
	ExpId456 -> "Id456: nti";
	ExpId423 -> "Id423: n";
	ExpNumber16 -> "Value16: 12";
	ExpMethod60 -> ExpMethod61;
	ExpMethod60 -> ExpId324;
	ExpMethod60 -> ExpList61;
	StatPrint9 -> ExpMethod16;
	ExpNumber17 -> "Value17: 12";
	ExpList20 -> ExpId148;
	MethDecl5 -> AccessModPublic5;
	MethDecl5 -> TypeModId8;
	MethDecl5 -> ExpId98;
	MethDecl5 -> MethArgList5;
	MethDecl5 -> VarDeclList7;
	MethDecl5 -> StatList6;
	MethDecl5 -> ExpId99;
	StatAssignId6 -> ExpId29;
	StatAssignId6 -> ExpMethod6;
	ExpId79 -> "Id79: v_key";
	ExpList14 -> ExpNumber14;
	VarDeclList2 -> VarDecl4;
	VarDeclList2 -> VarDecl5;
	VarDeclList2 -> VarDecl6;
	VarDeclList2 -> VarDecl7;
	VarDeclList2 -> VarDecl8;
	VarDeclList2 -> VarDecl9;
	MethDecl1 -> AccessModPublic1;
	MethDecl1 -> TypeModBool3;
	MethDecl1 -> ExpId78;
	MethDecl1 -> MethArgList1;
	MethDecl1 -> VarDeclList3;
	MethDecl1 -> StatList2;
	MethDecl1 -> ExpLogic2;
	ExpId67 -> "Id67: Search";
	StatAssignId102 -> ExpId445;
	StatAssignId102 -> ExpNumber28;
	ExpId382 -> "Id382: node";
	StatPrint10 -> ExpMethod19;
	ExpList7 -> ExpNumber6;
	ExpId6 -> "Id6: Tree";
	MethArg9 -> TypeModInt11;
	MethArg9 -> ExpId184;
	StatAssignId2 -> ExpId17;
	StatAssignId2 -> ExpMethod2;
	ExpId68 -> "Id68: Tree";
	ExpId149 -> "Id149: current_node";
	ExpId74 -> "Id74: has_left";
	ExpId109 -> "Id109: has_left";
	ExpId308 -> "Id308: ntb";
	ClassDecl1 -> ExpId68;
	ClassDecl1 -> VarDeclList2;
	ClassDecl1 -> MethDeclList1;
	MethArg16 -> TypeModInt16;
	MethArg16 -> ExpId338;
	ExpId393 -> "Id393: ntb";
	ExpBinary7 -> ExpId351;
	ExpBinary7 -> Less5;
	ExpBinary7 -> ExpId352;
	MethArg11 -> TypeModId14;
	MethArg11 -> ExpId245;
	ExpId244 -> "Id244: Tree";
	ExpId191 -> "Id191: ntb";
	ExpMethod41 -> ExpId255;
	ExpMethod41 -> ExpId256;
	ExpMethod41 -> ExpList41;
	ExpId132 -> "Id132: ntb";
	ExpId142 -> "Id142: key_aux";
	ExpId70 -> "Id70: left";
	ExpMethod50 -> ExpId283;
	ExpMethod50 -> ExpId284;
	ExpMethod50 -> ExpList50;
	ExpId406 -> "Id406: Tree";
	ExpId71 -> "Id71: Tree";
	ExpId94 -> "Id94: Tree";
	VarDecl6 -> TypeModInt2;
	VarDecl6 -> ExpId73;
	ExpList9 -> ExpNumber8;
	MethArgList15 -> MethArg10;
	MethArgList15 -> MethArg11;
	ExpId282 -> "Id282: ntb";
	ExpNegate1 -> ExpMethod35;
	ExpId12 -> "Id12: root";
	ExpId75 -> "Id75: has_right";
	StatWhileLoop4 -> ExpId347;
	StatWhileLoop4 -> StatBraces14;
	VarDecl9 -> TypeModId4;
	VarDecl9 -> ExpId77;
	VarDecl11 -> TypeModInt8;
	VarDecl11 -> ExpId122;
	ExpMethod44 -> ExpMethod45;
	ExpMethod44 -> ExpId267;
	ExpMethod44 -> ExpList45;
	ExpId304 -> "Id304: ntb";
	ExpId258 -> "Id258: RemoveRight";
	MethArgList1 -> MethArg0;
	ExpId156 -> "Id156: key_aux";
	ExpId193 -> "Id193: key_aux";
	ExpMethod8 -> ExpId36;
	ExpMethod8 -> ExpId37;
	ExpMethod8 -> ExpList8;
	TypeModId3 -> ExpId71;
	StatAssignId15 -> ExpId80;
	StatAssignId15 -> ExpId81;
	ExpId60 -> "Id60: ntb";
	ExpMethod31 -> ExpId205;
	ExpMethod31 -> ExpId206;
	ExpMethod31 -> ExpList31;
	ExpId188 -> "Id188: parent_node";
	StatAssignId38 -> ExpId175;
	StatAssignId38 -> ExpLogic15;
	ExpId341 -> "Id341: ifound";
	MethArgList22 -> MethArg19;
	ExpLogic15 -> "Value36: false";
	ExpId139 -> "Id139: Tree";
	ExpId35 -> "Id35: ntb";
	StatList19 -> StatAssignId38;
	StatList19 -> StatAssignId39;
	StatList19 -> StatAssignId40;
	ExpId374 -> "Id374: current_node";
	ExpId351 -> "Id351: v_key";
	ExpMethod28 -> ExpId177;
	ExpMethod28 -> ExpId178;
	ExpMethod28 -> ExpList28;
	ExpId178 -> "Id178: SetHas_Right";
	VarDecl30 -> TypeModInt17;
	VarDecl30 -> ExpId341;
	ExpLogic16 -> "Value37: true";
	ExpBinary8 -> ExpId359;
	ExpBinary8 -> Less6;
	ExpBinary8 -> ExpId360;
	ExpId228 -> "Id228: ntb";
	ExpList28 -> ExpLogic16;
	ExpId179 -> "Id179: ntb";
	ExpMethod29 -> ExpId180;
	ExpMethod29 -> ExpId181;
	ExpMethod29 -> ExpList29;
	ExpId181 -> "Id181: SetRight";
	MethDecl21 -> AccessModPublic21;
	MethDecl21 -> TypeModInt19;
	MethDecl21 -> ExpId398;
	MethDecl21 -> MethArgList21;
	MethDecl21 -> VarDeclList23;
	MethDecl21 -> StatList40;
	MethDecl21 -> ExpNumber24;
	ExpList29 -> ExpId182;
	MethArgList14 -> MethArg9;
	ExpMethod51 -> ExpId291;
	ExpMethod51 -> ExpId292;
	ExpMethod51 -> ExpList51;
	StatBraces3 -> StatList18;
	ExpId251 -> "Id251: ntb";
	ExpId164 -> "Id164: current_node";
	MethDecl14 -> AccessModPublic14;
	MethDecl14 -> TypeModBool18;
	MethDecl14 -> ExpId183;
	MethDecl14 -> MethArgList14;
	MethDecl14 -> VarDeclList16;
	MethDecl14 -> StatList20;
	MethDecl14 -> ExpId240;
	ExpId184 -> "Id184: v_key";
	ExpId93 -> "Id93: ln";
	ExpId224 -> "Id224: current_node";
	ExpList81 -> ExpThis14;
	ExpId58 -> "Id58: root";
	TypeModId11 -> ExpId185;
	VarDecl17 -> TypeModId11;
	VarDecl17 -> ExpId186;
	ExpId186 -> "Id186: current_node";
	StatAssignId69 -> ExpId301;
	StatAssignId69 -> ExpMethod55;
	ExpId113 -> "Id113: val";
	VarDeclList16 -> VarDecl17;
	VarDeclList16 -> VarDecl18;
	VarDeclList16 -> VarDecl19;
	VarDeclList16 -> VarDecl20;
	VarDeclList16 -> VarDecl21;
	VarDeclList16 -> VarDecl22;
	VarDeclList16 -> VarDecl23;
	ExpId187 -> "Id187: Tree";
	VarDecl18 -> TypeModId12;
	VarDecl18 -> ExpId188;
	ExpId189 -> "Id189: cont";
	VarDecl20 -> TypeModBool20;
	VarDecl20 -> ExpId190;
	VarDecl19 -> TypeModBool19;
	VarDecl19 -> ExpId189;
	VarDecl22 -> TypeModBool22;
	VarDecl22 -> ExpId192;
	ExpId381 -> "Id381: ntb";
	ExpId325 -> "Id325: p_node";
	ExpId176 -> "Id176: ntb";
	ExpId194 -> "Id194: current_node";
	StatList20 -> StatAssignId41;
	StatList20 -> StatAssignId42;
	StatList20 -> StatAssignId43;
	StatList20 -> StatAssignId44;
	StatList20 -> StatAssignId45;
	StatList20 -> StatWhileLoop1;
	ExpId327 -> "Id327: c_node";
	StatAssignId42 -> ExpId195;
	StatAssignId42 -> ExpThis2;
	ExpLogic18 -> "Value39: true";
	ExpMethod34 -> ExpId220;
	ExpMethod34 -> ExpId221;
	ExpMethod34 -> ExpList34;
	ExpId197 -> "Id197: found";
	ExpId253 -> "Id253: p_node";
	StatAssignId44 -> ExpId197;
	StatAssignId44 -> ExpLogic19;
	ExpLogic14 -> "Value35: true";
	ExpId235 -> "Id235: parent_node";
	ExpId198 -> "Id198: is_root";
	ExpId277 -> "Id277: SetHas_Left";
	ExpId220 -> "Id220: current_node";
	ExpId199 -> "Id199: cont";
	ExpId435 -> "Id435: n";
	ExpId200 -> "Id200: key_aux";
	StatAssignId46 -> ExpId200;
	StatAssignId46 -> ExpMethod30;
	ExpMethod30 -> ExpId201;
	ExpMethod30 -> ExpId202;
	ExpMethod30 -> ExpList30;
	ExpMethod77 -> ExpId395;
	ExpMethod77 -> ExpId396;
	ExpMethod77 -> ExpList77;
	ExpMethod46 -> ExpThis7;
	ExpMethod46 -> ExpId268;
	ExpMethod46 -> ExpList46;
	StatList21 -> StatAssignId46;
	StatList21 -> StatConditional5;
	StatList21 -> StatAssignId58;
	ExpId203 -> "Id203: v_key";
	StatAssignId65 -> ExpId278;
	StatAssignId65 -> ExpMethod49;
	ExpBinary4 -> ExpId203;
	ExpBinary4 -> Less3;
	ExpBinary4 -> ExpId204;
	StatAssignId90 -> ExpId388;
	StatAssignId90 -> ExpLogic39;
	ExpId141 -> "Id141: cont";
	StatConditional5 -> ExpBinary4;
	StatConditional5 -> StatConditional6;
	StatConditional5 -> StatConditional7;
	StatConditional6 -> ExpMethod31;
	StatConditional6 -> StatBraces6;
	StatConditional6 -> StatAssignId49;
	StatPrint0 -> ExpMethod0;
	ExpId16 -> "Id16: Init";
	StatAssignId78 -> ExpId345;
	StatAssignId78 -> ExpLogic34;
	StatAssignId47 -> ExpId207;
	StatAssignId47 -> ExpId208;
	ExpId208 -> "Id208: current_node";
	ExpId209 -> "Id209: current_node";
	ExpId287 -> "Id287: p_node";
	StatAssignId48 -> ExpId209;
	StatAssignId48 -> ExpMethod32;
	ExpId210 -> "Id210: current_node";
	ExpMethod61 -> ExpId322;
	ExpMethod61 -> ExpId323;
	ExpMethod61 -> ExpList60;
	ExpId51 -> "Id51: Search";
	ExpMethod32 -> ExpId210;
	ExpMethod32 -> ExpId211;
	ExpMethod32 -> ExpList32;
	ExpId257 -> "Id257: ntb";
	ExpId309 -> "Id309: p_node";
	ExpMethod57 -> ExpId309;
	ExpMethod57 -> ExpId310;
	ExpMethod57 -> ExpList57;
	VarDecl39 -> TypeModInt22;
	VarDecl39 -> ExpId413;
	ExpId324 -> "Id324: GetKey";
	ExpId77 -> "Id77: my_null";
	ExpId212 -> "Id212: cont";
	ExpMethod78 -> ExpId403;
	ExpMethod78 -> ExpId404;
	ExpMethod78 -> ExpList78;
	StatAssignId70 -> ExpId304;
	StatAssignId70 -> ExpMethod56;
	ExpId213 -> "Id213: key_aux";
	StatList29 -> StatWhileLoop2;
	StatList29 -> StatAssignId70;
	StatList29 -> StatAssignId71;
	ExpMethod68 -> ExpId361;
	ExpMethod68 -> ExpId362;
	ExpMethod68 -> ExpList68;
	ExpId215 -> "Id215: current_node";
	StatAssignId41 -> ExpId194;
	StatAssignId41 -> ExpThis1;
	ExpId216 -> "Id216: GetHas_Right";
	StatAssignId50 -> ExpId217;
	StatAssignId50 -> ExpId218;
	ExpId415 -> "Id415: GetHas_Right";
	ExpId218 -> "Id218: current_node";
	StatList32 -> StatAssignId72;
	StatList32 -> StatAssignId73;
	StatList32 -> StatAssignId74;
	ExpId388 -> "Id388: ntb";
	StatList23 -> StatAssignId50;
	StatList23 -> StatAssignId51;
	TypeModId9 -> ExpId136;
	ExpId219 -> "Id219: current_node";
	ExpId284 -> "Id284: SetHas_Right";
	StatAssignId51 -> ExpId219;
	StatAssignId51 -> ExpMethod34;
	ExpId342 -> "Id342: cont";
	ExpId221 -> "Id221: GetRight";
	StatWhileLoop2 -> ExpMethod51;
	StatWhileLoop2 -> StatBraces12;
	StatBraces7 -> StatList23;
	ExpId370 -> "Id370: Print";
	ExpId222 -> "Id222: cont";
	ExpId64 -> "Id64: root";
	StatAssignId52 -> ExpId222;
	StatAssignId52 -> ExpLogic22;
	VarDecl29 -> TypeModId19;
	VarDecl29 -> ExpId340;
	ExpId225 -> "Id225: GetHas_Right";
	ExpMethod36 -> ExpId226;
	ExpMethod36 -> ExpId227;
	ExpMethod36 -> ExpList36;
	StatConditional10 -> ExpBinary6;
	StatConditional10 -> StatAssignId53;
	StatConditional10 -> StatAssignId54;
	StatList27 -> StatAssignId63;
	StatList27 -> StatAssignId64;
	StatAssignId53 -> ExpId228;
	StatAssignId53 -> ExpLogic23;
	ExpLogic23 -> "Value44: true";
	ExpId229 -> "Id229: ntb";
	StatBraces4 -> StatList19;
	ExpMethod37 -> ExpThis3;
	ExpMethod37 -> ExpId230;
	ExpMethod37 -> ExpList37;
	ExpId205 -> "Id205: current_node";
	TypeModId15 -> ExpId286;
	ExpId231 -> "Id231: parent_node";
	StatAssignId73 -> ExpId325;
	StatAssignId73 -> ExpId326;
	StatList16 -> StatConditional3;
	ExpId232 -> "Id232: current_node";
	ExpMethod38 -> ExpThis4;
	ExpMethod38 -> ExpId234;
	ExpMethod38 -> ExpList38;
	ExpMethod56 -> ExpId305;
	ExpMethod56 -> ExpId306;
	ExpMethod56 -> ExpList56;
	VarDecl14 -> TypeModId10;
	VarDecl14 -> ExpId140;
	ExpId234 -> "Id234: Remove";
	StatPrint11 -> ExpMethod74;
	StatBraces12 -> StatList30;
	ExpId236 -> "Id236: current_node";
	StatList24 -> StatConditional9;
	StatList24 -> StatAssignId56;
	StatList24 -> StatAssignId57;
	StatAssignId56 -> ExpId237;
	StatAssignId56 -> ExpLogic24;
	ExpId340 -> "Id340: current_node";
	ExpLogic24 -> "Value45: true";
	StatAssignId58 -> ExpId239;
	StatAssignId58 -> ExpLogic26;
	ExpId427 -> "Id427: GetLeft";
	ExpId367 -> "Id367: ifound";
	ExpId260 -> "Id260: c_node";
	StatAssignId71 -> ExpId308;
	StatAssignId71 -> ExpMethod57;
	ExpLogic26 -> "Value47: false";
	ExpId297 -> "Id297: GetRight";
	StatBraces5 -> StatList21;
	VarDecl34 -> TypeModId20;
	VarDecl34 -> ExpId373;
	ExpId240 -> "Id240: found";
	ExpMethod53 -> ExpMethod54;
	ExpMethod53 -> ExpId298;
	ExpMethod53 -> ExpList54;
	MethDecl15 -> AccessModPublic15;
	MethDecl15 -> TypeModBool23;
	MethDecl15 -> ExpId241;
	MethDecl15 -> MethArgList15;
	MethDecl15 -> VarDeclList17;
	MethDecl15 -> StatList25;
	MethDecl15 -> ExpLogic29;
	ExpId33 -> "Id33: root";
	ExpId286 -> "Id286: Tree";
	ExpId133 -> "Id133: ntb";
	MethArg10 -> TypeModId13;
	MethArg10 -> ExpId243;
	ExpId243 -> "Id243: p_node";
	ExpId252 -> "Id252: RemoveLeft";
	ExpId143 -> "Id143: new_node";
	TypeModId14 -> ExpId244;
	VarDeclList17 -> VarDecl24;
	VarDeclList17 -> VarDecl25;
	VarDeclList17 -> VarDecl26;
	StatConditional23 -> ExpMethod89;
	StatConditional23 -> StatBraces21;
	StatConditional23 -> StatAssignId105;
	VarDecl25 -> TypeModInt13;
	VarDecl25 -> ExpId247;
	ExpId247 -> "Id247: auxkey1";
	ExpId248 -> "Id248: auxkey2";
	ExpId50 -> "Id50: root";
	ExpId295 -> "Id295: SetKey";
	ExpList78 -> ExpThis13;
	ExpId214 -> "Id214: v_key";
	StatBraces0 -> StatList15;
	VarDecl31 -> TypeModBool29;
	VarDecl31 -> ExpId342;
	ExpId249 -> "Id249: c_node";
	ExpId379 -> "Id379: Tree";
	ExpMethod39 -> ExpId249;
	ExpMethod39 -> ExpId250;
	ExpMethod39 -> ExpList39;
	StatBraces1 -> StatList16;
	StatConditional11 -> ExpMethod39;
	StatConditional11 -> StatAssignId59;
	StatConditional11 -> StatConditional12;
	ExpLogic25 -> "Value46: false";
	StatAssignId59 -> ExpId251;
	StatAssignId59 -> ExpMethod40;
	ExpMethod11 -> ExpId47;
	ExpMethod11 -> ExpId48;
	ExpMethod11 -> ExpList11;
	ExpList40 -> ExpId253;
	ExpList40 -> ExpId254;
	ExpId254 -> "Id254: c_node";
	ExpMethod21 -> ExpId153;
	ExpMethod21 -> ExpId154;
	ExpMethod21 -> ExpList21;
	ExpMethod42 -> ExpThis6;
	ExpMethod42 -> ExpId258;
	ExpMethod42 -> ExpList42;
	ExpId261 -> "Id261: auxkey1";
	StatConditional18 -> ExpMethod71;
	StatConditional18 -> StatBraces16;
	StatConditional18 -> StatAssignId90;
	ExpId265 -> "Id265: p_node";
	ExpMethod45 -> ExpId265;
	ExpMethod45 -> ExpId266;
	ExpMethod45 -> ExpList44;
	VarDecl0 -> TypeModId0;
	VarDecl0 -> ExpId7;
	ExpId268 -> "Id268: Compare";
	ExpId269 -> "Id269: auxkey1";
	ExpId270 -> "Id270: auxkey2";
	ExpList24 -> ExpLogic14;
	ExpId271 -> "Id271: ntb";
	ExpId36 -> "Id36: root";
	ExpId250 -> "Id250: GetHas_Left";
	ExpId272 -> "Id272: p_node";
	ExpId334 -> "Id334: ntb";
	StatAssignId16 -> ExpId82;
	StatAssignId16 -> ExpLogic0;
	ExpMethod47 -> ExpId272;
	ExpMethod47 -> ExpId273;
	ExpMethod47 -> ExpList47;
	ExpId273 -> "Id273: SetLeft";
	ExpId274 -> "Id274: my_null";
	ExpList47 -> ExpId274;
	ExpId275 -> "Id275: ntb";
	StatAssignId64 -> ExpId275;
	StatAssignId64 -> ExpMethod48;
	StatAssignId54 -> ExpId229;
	StatAssignId54 -> ExpMethod37;
	ExpList48 -> ExpLogic27;
	ExpList49 -> ExpId281;
	StatList28 -> StatAssignId65;
	StatList28 -> StatAssignId66;
	MethDecl0 -> AccessModPublic0;
	MethDecl0 -> TypeModInt0;
	MethDecl0 -> ExpId5;
	MethDecl0 -> MethArgList0;
	MethDecl0 -> VarDeclList1;
	MethDecl0 -> StatList1;
	MethDecl0 -> ExpNumber19;
	ExpId345 -> "Id345: cont";
	StatAssignId66 -> ExpId282;
	StatAssignId66 -> ExpMethod50;
	StatAssignId55 -> ExpId233;
	StatAssignId55 -> ExpMethod38;
	ExpLogic28 -> "Value49: false";
	ExpList50 -> ExpLogic28;
	ExpId131 -> "Id131: ntb";
	ExpId347 -> "Id347: cont";
	StatBraces11 -> StatList28;
	StatBraces9 -> StatList26;
	ExpId432 -> "Id432: MyVisitor";
	StatList25 -> StatConditional11;
	ExpLogic29 -> "Value50: true";
	VarDeclList14 -> VarDecl10;
	VarDeclList14 -> VarDecl11;
	ExpId333 -> "Id333: my_null";
	ExpId172 -> "Id172: current_node";
	MethArgList16 -> MethArg12;
	MethArgList16 -> MethArg13;
	ExpId288 -> "Id288: Tree";
	ExpNumber14 -> "Value14: 16";
	TypeModId16 -> ExpId288;
	ExpId226 -> "Id226: current_node";
	MethArg13 -> TypeModId16;
	MethArg13 -> ExpId289;
	ExpMethod70 -> ExpThis10;
	ExpMethod70 -> ExpId376;
	ExpMethod70 -> ExpList70;
	ExpId289 -> "Id289: c_node";
	VarDecl27 -> TypeModBool26;
	VarDecl27 -> ExpId290;
	ExpId119 -> "Id119: num1";
	ExpId356 -> "Id356: current_node";
	ExpId14 -> "Id14: ntb";
	ExpId291 -> "Id291: c_node";
	ExpMethod54 -> ExpId296;
	ExpMethod54 -> ExpId297;
	ExpMethod54 -> ExpList53;
	ExpId292 -> "Id292: GetHas_Right";
	ExpId293 -> "Id293: ntb";
	StatBraces6 -> StatList22;
	StatAssignId82 -> ExpId358;
	StatAssignId82 -> ExpLogic35;
	StatAssignId67 -> ExpId293;
	StatAssignId67 -> ExpMethod52;
	ExpId294 -> "Id294: c_node";
	ExpLogic30 -> "Value51: false";
	ExpMethod52 -> ExpId294;
	ExpMethod52 -> ExpId295;
	ExpMethod52 -> ExpList52;
	ExpId296 -> "Id296: c_node";
	ExpId444 -> "Id444: accept";
	ExpId255 -> "Id255: c_node";
	ExpId298 -> "Id298: GetKey";
	StatList17 -> StatAssignId34;
	StatList17 -> StatAssignId35;
	StatList17 -> StatAssignId36;
	ExpId361 -> "Id361: current_node";
	ExpList52 -> ExpMethod53;
	VarDecl21 -> TypeModBool21;
	VarDecl21 -> ExpId191;
	ExpId299 -> "Id299: p_node";
	ExpId223 -> "Id223: is_root";
	ExpId301 -> "Id301: c_node";
	StatAssignId74 -> ExpId327;
	StatAssignId74 -> ExpMethod62;
	ExpId302 -> "Id302: c_node";
	ExpId307 -> "Id307: my_null";
	ExpId310 -> "Id310: SetHas_Right";
	ExpId148 -> "Id148: v_key";
	ExpList57 -> ExpLogic30;
	MethDecl17 -> AccessModPublic17;
	MethDecl17 -> TypeModBool27;
	MethDecl17 -> ExpId311;
	MethDecl17 -> MethArgList17;
	MethDecl17 -> VarDeclList19;
	MethDecl17 -> StatList31;
	MethDecl17 -> ExpLogic33;
	ExpId311 -> "Id311: RemoveLeft";
	ExpId180 -> "Id180: current_node";
	StatList26 -> StatAssignId61;
	StatList26 -> StatAssignId62;
	StatList26 -> StatConditional13;
	MethArg14 -> TypeModId17;
	MethArg14 -> ExpId313;
	StatPrint2 -> ExpNumber9;
	MethArgList17 -> MethArg14;
	MethArgList17 -> MethArg15;
	ExpMethod66 -> ExpId353;
	ExpMethod66 -> ExpId354;
	ExpMethod66 -> ExpList66;
	MethArg15 -> TypeModId18;
	MethArg15 -> ExpId315;
	ExpId316 -> "Id316: ntb";
	VarDeclList19 -> VarDecl28;
	StatConditional16 -> ExpBinary8;
	StatConditional16 -> StatConditional17;
	StatConditional16 -> StatBraces15;
	ExpMethod58 -> ExpId317;
	ExpMethod58 -> ExpId318;
	ExpMethod58 -> ExpList58;
	ExpMethod59 -> ExpId320;
	ExpMethod59 -> ExpId321;
	ExpMethod59 -> ExpList59;
	StatAssignId97 -> ExpId425;
	StatAssignId97 -> ExpMethod83;
	ExpLogic11 -> "Value32: true";
	ExpId321 -> "Id321: SetKey";
	ExpId452 -> "Id452: GetLeft";
	ExpId322 -> "Id322: c_node";
	StatBraces8 -> StatList24;
	ExpId323 -> "Id323: GetLeft";
	VarDecl1 -> TypeModBool0;
	VarDecl1 -> ExpId8;
	ExpNumber13 -> "Value13: 12";
	ExpList59 -> ExpMethod60;
	StatConditional17 -> ExpMethod68;
	StatConditional17 -> StatAssignId83;
	StatConditional17 -> StatAssignId84;
	ExpId328 -> "Id328: c_node";
	ExpMethod62 -> ExpId328;
	ExpMethod62 -> ExpId329;
	ExpMethod62 -> ExpList62;
	ExpBinary1 -> ExpId126;
	ExpBinary1 -> Less0;
	ExpBinary1 -> ExpId127;
	ExpId329 -> "Id329: GetLeft";
	ExpLogic27 -> "Value48: false";
	StatBraces13 -> StatList32;
	StatAssignId24 -> ExpId124;
	StatAssignId24 -> ExpBinary0;
	StatList31 -> StatWhileLoop3;
	StatList31 -> StatAssignId75;
	StatList31 -> StatAssignId76;
	StatAssignId27 -> ExpId132;
	StatAssignId27 -> ExpLogic11;
	ExpId330 -> "Id330: ntb";
	ExpId360 -> "Id360: v_key";
	ExpMethod15 -> ExpId56;
	ExpMethod15 -> ExpId57;
	ExpMethod15 -> ExpList15;
	StatAssignId75 -> ExpId330;
	StatAssignId75 -> ExpMethod63;
	ExpMethod63 -> ExpId331;
	ExpMethod63 -> ExpId332;
	ExpMethod63 -> ExpList63;
	ExpId127 -> "Id127: num2";
	ExpId285 -> "Id285: RemoveRight";
	ExpId332 -> "Id332: SetLeft";
	ExpList63 -> ExpId333;
	ExpMethod64 -> ExpId335;
	ExpMethod64 -> ExpId336;
	ExpMethod64 -> ExpList64;
	ExpList64 -> ExpLogic32;
	StatAssignId104 -> ExpId453;
	StatAssignId104 -> ExpMethod91;
	ExpId442 -> "Id442: nti";
	ExpLogic33 -> "Value54: true";
	ExpNewId3 -> ExpId144;
	ExpId276 -> "Id276: p_node";
	ExpId349 -> "Id349: current_node";
	StatConditional3 -> ExpMethod22;
	StatConditional3 -> StatAssignId33;
	StatConditional3 -> StatBraces2;
	MethArgList18 -> MethArg16;
	StatPrint7 -> ExpMethod14;
	VarDecl32 -> TypeModInt18;
	VarDecl32 -> ExpId343;
	ExpId450 -> "Id450: l";
	StatAssignId3 -> ExpId20;
	StatAssignId3 -> ExpMethod3;
	ExpId339 -> "Id339: Tree";
	VarDeclList20 -> VarDecl29;
	VarDeclList20 -> VarDecl30;
	VarDeclList20 -> VarDecl31;
	VarDeclList20 -> VarDecl32;
	StatList22 -> StatAssignId47;
	StatList22 -> StatAssignId48;
	ExpId343 -> "Id343: key_aux";
	StatConditional15 -> ExpMethod66;
	StatConditional15 -> StatAssignId81;
	StatConditional15 -> StatAssignId82;
	StatList33 -> StatAssignId77;
	StatList33 -> StatAssignId78;
	StatList33 -> StatAssignId79;
	StatList33 -> StatWhileLoop4;
	ExpLogic34 -> "Value55: true";
	ExpId346 -> "Id346: ifound";
	ExpId129 -> "Id129: num1";
	StatAssignId79 -> ExpId346;
	StatAssignId79 -> ExpNumber21;
	StatAssignId86 -> ExpId368;
	StatAssignId86 -> ExpLogic37;
	VarDecl4 -> TypeModId2;
	VarDecl4 -> ExpId70;
	ExpList17 -> ExpNumber17;
	ExpId348 -> "Id348: key_aux";
	ExpId177 -> "Id177: current_node";
	ExpMethod65 -> ExpId349;
	ExpMethod65 -> ExpId350;
	ExpMethod65 -> ExpList65;
	ExpId350 -> "Id350: GetKey";
	StatList34 -> StatAssignId80;
	StatList34 -> StatConditional14;
	ExpId352 -> "Id352: key_aux";
	StatAssignId45 -> ExpId198;
	StatAssignId45 -> ExpLogic20;
	StatConditional14 -> ExpBinary7;
	StatConditional14 -> StatConditional15;
	StatConditional14 -> StatConditional16;
	ExpId354 -> "Id354: GetHas_Left";
	ExpId355 -> "Id355: current_node";
	ExpNewId1 -> ExpId13;
	StatAssignId81 -> ExpId355;
	StatAssignId81 -> ExpMethod67;
	ExpId66 -> "Id66: root";
	TypeModId18 -> ExpId314;
	ExpLogic17 -> "Value38: true";
	ExpId357 -> "Id357: GetLeft";
	ExpId358 -> "Id358: cont";
	StatAssignId39 -> ExpId176;
	StatAssignId39 -> ExpMethod28;
	ExpLogic35 -> "Value57: false";
}

