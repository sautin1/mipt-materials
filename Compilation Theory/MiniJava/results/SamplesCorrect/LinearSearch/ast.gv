digraph {
	ordering = out;
	ClassDeclList0 -> ClassDecl0;
	ExpNumber22 -> "Value24: 1";
	ExpBinary13 -> ExpId86;
	ExpBinary13 -> Minus1;
	ExpBinary13 -> ExpNumber22;
	ExpId86 -> "Id86: k";
	StatAssignId22 -> ExpId85;
	StatAssignId22 -> ExpBinary13;
	ExpId85 -> "Id85: k";
	ExpNumber21 -> "Value23: 1";
	ExpBinary12 -> ExpId84;
	ExpBinary12 -> Plus5;
	ExpBinary12 -> ExpNumber21;
	StatAssignId21 -> ExpId83;
	StatAssignId21 -> ExpBinary12;
	ExpId83 -> "Id83: j";
	ExpId82 -> "Id82: aux02";
	ExpBinary11 -> ExpId81;
	ExpBinary11 -> Plus4;
	ExpBinary11 -> ExpId82;
	ExpId79 -> "Id79: number";
	ExpBinary10 -> ExpId78;
	ExpBinary10 -> Minus0;
	ExpBinary10 -> ExpNumber20;
	StatAssignId20 -> ExpId77;
	StatAssignId20 -> ExpBinary10;
	ExpId77 -> "Id77: aux02";
	StatList8 -> StatAssignId19;
	StatList8 -> StatAssignId20;
	StatList8 -> StatAssignIdWithIndex0;
	StatList8 -> StatAssignId21;
	StatList8 -> StatAssignId22;
	ExpId76 -> "Id76: j";
	ExpBinary9 -> ExpNumber19;
	ExpBinary9 -> Times0;
	ExpBinary9 -> ExpId76;
	StatAssignId19 -> ExpId75;
	StatAssignId19 -> ExpBinary9;
	StatWhileLoop2 -> ExpBinary8;
	StatWhileLoop2 -> StatBraces3;
	ExpId31 -> "Id31: j";
	ExpId37 -> "Id37: j";
	ExpId30 -> "Id30: num";
	ExpId54 -> "Id54: ifound";
	ExpId64 -> "Id64: aux01";
	MethArgList2 -> MethArg1;
	ExpId27 -> "Id27: j";
	MethDecl2 -> AccessModPublic2;
	MethDecl2 -> TypeModInt7;
	MethDecl2 -> ExpId29;
	MethDecl2 -> MethArgList2;
	MethDecl2 -> VarDeclList3;
	MethDecl2 -> StatList4;
	MethDecl2 -> ExpId59;
	ExpId48 -> "Id48: num";
	ExpId81 -> "Id81: aux01";
	ExpNumber8 -> "Value8: 1";
	StatAssignId17 -> ExpId70;
	StatAssignId17 -> ExpNumber17;
	ClassDecl0 -> ExpId4;
	ClassDecl0 -> VarDeclList0;
	ClassDecl0 -> MethDeclList0;
	StatAssignId3 -> ExpId27;
	StatAssignId3 -> ExpBinary1;
	ExpId25 -> "Id25: number";
	StatBraces0 -> StatList3;
	StatAssignId1 -> ExpId14;
	StatAssignId1 -> ExpMethod2;
	StatAssignId9 -> ExpId49;
	StatAssignId9 -> ExpNumber13;
	StatAssignId2 -> ExpId22;
	StatAssignId2 -> ExpNumber7;
	ExpId66 -> "Id66: size";
	VarDecl4 -> TypeModInt6;
	VarDecl4 -> ExpId21;
	MethDeclList0 -> MethDecl0;
	MethDeclList0 -> MethDecl1;
	MethDeclList0 -> MethDecl2;
	MethDeclList0 -> MethDecl3;
	ExpId65 -> "Id65: aux02";
	Program0 -> MainClass0;
	Program0 -> ClassDeclList0;
	ExpNumber6 -> "Value6: 55";
	StatPrint5 -> ExpMethod6;
	ExpList6 -> ExpNumber5;
	StatAssignId0 -> ExpId11;
	StatAssignId0 -> ExpMethod1;
	StatAssignId13 -> ExpId55;
	StatAssignId13 -> ExpId56;
	ExpNumber20 -> "Value22: 3";
	ExpNumber5 -> "Value5: 50";
	StatPrint4 -> ExpMethod5;
	MethArg1 -> TypeModInt8;
	MethArg1 -> ExpId30;
	ExpList5 -> ExpNumber4;
	StatList7 -> StatAssignId15;
	StatList7 -> StatAssignId16;
	StatList7 -> StatAssignId17;
	StatList7 -> StatAssignId18;
	StatList7 -> StatWhileLoop2;
	ExpId78 -> "Id78: k";
	VarDeclList0 -> VarDecl0;
	VarDeclList0 -> VarDecl1;
	ExpMethod6 -> ExpThis5;
	ExpMethod6 -> ExpId19;
	ExpMethod6 -> ExpList6;
	StatAssignIdWithIndex0 -> ExpId79;
	StatAssignIdWithIndex0 -> ExpId80;
	StatAssignIdWithIndex0 -> ExpBinary11;
	StatAssignId7 -> ExpId42;
	StatAssignId7 -> ExpBracket1;
	StatList3 -> StatPrint6;
	StatList3 -> StatAssignId3;
	ExpList4 -> ExpNumber3;
	ExpId5 -> "Id5: number";
	ExpId63 -> "Id63: k";
	ExpLogic1 -> "Value16: true";
	MethArg0 -> TypeModInt2;
	MethArg0 -> ExpId8;
	ExpId7 -> "Id7: Start";
	ExpMethod4 -> ExpThis3;
	ExpMethod4 -> ExpId17;
	ExpMethod4 -> ExpList4;
	ExpMethod0 -> ExpNewId0;
	ExpMethod0 -> ExpId3;
	ExpMethod0 -> ExpList0;
	MethDecl0 -> AccessModPublic0;
	MethDecl0 -> TypeModInt1;
	MethDecl0 -> ExpId7;
	MethDecl0 -> MethArgList0;
	MethDecl0 -> VarDeclList1;
	MethDecl0 -> StatList1;
	MethDecl0 -> ExpNumber6;
	ExpNewId0 -> ExpId2;
	ExpId14 -> "Id14: aux02";
	StatPrint1 -> ExpNumber1;
	StatList0 -> StatPrint0;
	ExpId80 -> "Id80: j";
	ExpId11 -> "Id11: aux01";
	ExpId20 -> "Id20: Print";
	ExpNumber23 -> "Value25: 0";
	ExpId33 -> "Id33: ifound";
	MethDecl1 -> AccessModPublic1;
	MethDecl1 -> TypeModInt5;
	MethDecl1 -> ExpId20;
	MethDecl1 -> MethArgList1;
	MethDecl1 -> VarDeclList2;
	MethDecl1 -> StatList2;
	MethDecl1 -> ExpNumber9;
	ExpNumber17 -> "Value19: 1";
	VarDecl1 -> TypeModInt0;
	VarDecl1 -> ExpId6;
	ExpMethod1 -> ExpThis0;
	ExpMethod1 -> ExpId12;
	ExpMethod1 -> ExpList1;
	ExpBinary8 -> ExpId73;
	ExpBinary8 -> Less4;
	ExpBinary8 -> ExpId74;
	ExpId0 -> "Id0: LinearSearch";
	MainClass0 -> ExpId0;
	MainClass0 -> ExpId1;
	MainClass0 -> StatList0;
	ExpNumber7 -> "Value7: 1";
	ExpMethod3 -> ExpThis2;
	ExpMethod3 -> ExpId16;
	ExpMethod3 -> ExpList3;
	ExpId34 -> "Id34: aux01";
	ExpId36 -> "Id36: nt";
	ExpId3 -> "Id3: Start";
	ExpId13 -> "Id13: sz";
	ExpId28 -> "Id28: j";
	ExpId21 -> "Id21: j";
	VarDecl10 -> TypeModInt13;
	VarDecl10 -> ExpId36;
	ExpId26 -> "Id26: j";
	ExpNumber4 -> "Value4: 17";
	ExpId4 -> "Id4: LS";
	VarDecl0 -> TypeModIntArray0;
	VarDecl0 -> ExpId5;
	VarDeclList2 -> VarDecl4;
	ExpList3 -> ExpNumber2;
	StatList5 -> StatAssignId7;
	StatList5 -> StatAssignId8;
	StatList5 -> StatConditional0;
	StatList5 -> StatAssignId14;
	ExpMethod5 -> ExpThis4;
	ExpMethod5 -> ExpId18;
	ExpMethod5 -> ExpList5;
	ExpBinary6 -> ExpId58;
	ExpBinary6 -> Plus2;
	ExpBinary6 -> ExpNumber16;
	StatPrint0 -> ExpMethod0;
	ExpId10 -> "Id10: aux02";
	ExpNumber3 -> "Value3: 12";
	ExpNumber0 -> "Value0: 10";
	VarDecl7 -> TypeModInt10;
	VarDecl7 -> ExpId33;
	ExpBinary0 -> ExpId23;
	ExpBinary0 -> Less0;
	ExpBinary0 -> ExpId24;
	ExpBracket1 -> ExpId43;
	ExpBracket1 -> ExpId44;
	VarDeclList1 -> VarDecl2;
	VarDeclList1 -> VarDecl3;
	MethArgList0 -> MethArg0;
	ExpId9 -> "Id9: aux01";
	ExpId15 -> "Id15: Print";
	ExpId49 -> "Id49: nt";
	ExpId23 -> "Id23: j";
	StatPrint2 -> ExpMethod3;
	StatAssignId5 -> ExpId38;
	StatAssignId5 -> ExpLogic0;
	ExpId75 -> "Id75: aux01";
	ExpId12 -> "Id12: Init";
	ExpId16 -> "Id16: Search";
	ExpBinary1 -> ExpId28;
	ExpBinary1 -> Plus0;
	ExpBinary1 -> ExpNumber8;
	MethArg2 -> TypeModInt15;
	MethArg2 -> ExpId61;
	ExpId1 -> "Id1: a";
	ExpList1 -> ExpId13;
	VarDecl9 -> TypeModInt12;
	VarDecl9 -> ExpId35;
	ExpBinary4 -> ExpId47;
	ExpBinary4 -> Less2;
	ExpBinary4 -> ExpId48;
	StatList1 -> StatAssignId0;
	StatList1 -> StatAssignId1;
	StatList1 -> StatPrint1;
	StatList1 -> StatPrint2;
	StatList1 -> StatPrint3;
	StatList1 -> StatPrint4;
	StatList1 -> StatPrint5;
	VarDecl5 -> TypeModInt9;
	VarDecl5 -> ExpId31;
	StatAssignId11 -> ExpId53;
	StatAssignId11 -> ExpLogic1;
	VarDecl2 -> TypeModInt3;
	VarDecl2 -> ExpId9;
	ExpId24 -> "Id24: size";
	VarDecl13 -> TypeModInt18;
	VarDecl13 -> ExpId64;
	ExpId2 -> "Id2: LS";
	ExpMethod2 -> ExpThis1;
	ExpMethod2 -> ExpId15;
	ExpMethod2 -> ExpList2;
	ExpNumber15 -> "Value17: 1";
	ExpId29 -> "Id29: Search";
	StatWhileLoop0 -> ExpBinary0;
	StatWhileLoop0 -> StatBraces0;
	ExpNumber1 -> "Value1: 9999";
	VarDeclList3 -> VarDecl5;
	VarDeclList3 -> VarDecl6;
	VarDeclList3 -> VarDecl7;
	VarDeclList3 -> VarDecl8;
	VarDeclList3 -> VarDecl9;
	VarDeclList3 -> VarDecl10;
	ExpId17 -> "Id17: Search";
	VarDecl6 -> TypeModBool0;
	VarDecl6 -> ExpId32;
	ExpId84 -> "Id84: j";
	VarDecl8 -> TypeModInt11;
	VarDecl8 -> ExpId34;
	ExpBracket0 -> ExpId25;
	ExpBracket0 -> ExpId26;
	ExpId35 -> "Id35: aux02";
	StatAssignId4 -> ExpId37;
	StatAssignId4 -> ExpNumber10;
	StatList4 -> StatAssignId4;
	StatList4 -> StatAssignId5;
	StatList4 -> StatAssignId6;
	StatList4 -> StatWhileLoop1;
	ExpId38 -> "Id38: ls01";
	ExpNumber18 -> "Value20: 1";
	ExpLogic0 -> "Value11: false";
	ExpId39 -> "Id39: ifound";
	StatAssignId14 -> ExpId57;
	StatAssignId14 -> ExpBinary6;
	VarDecl3 -> TypeModInt4;
	VarDecl3 -> ExpId10;
	ExpId73 -> "Id73: j";
	StatAssignId6 -> ExpId39;
	StatAssignId6 -> ExpNumber11;
	ExpNumber11 -> "Value12: 0";
	ExpBinary2 -> ExpId40;
	ExpBinary2 -> Less1;
	ExpBinary2 -> ExpId41;
	ExpId41 -> "Id41: size";
	ExpNumber9 -> "Value9: 0";
	ExpId19 -> "Id19: Search";
	StatWhileLoop1 -> ExpBinary2;
	StatWhileLoop1 -> StatBraces1;
	ExpId42 -> "Id42: aux01";
	ExpId44 -> "Id44: j";
	StatAssignId8 -> ExpId45;
	StatAssignId8 -> ExpBinary3;
	ExpList0 -> ExpNumber0;
	ExpId46 -> "Id46: num";
	StatPrint6 -> ExpBracket0;
	ExpBinary3 -> ExpId46;
	ExpBinary3 -> Plus1;
	ExpBinary3 -> ExpNumber12;
	ExpNumber12 -> "Value13: 1";
	ExpId47 -> "Id47: aux01";
	StatConditional0 -> ExpBinary4;
	StatConditional0 -> StatAssignId9;
	StatConditional0 -> StatConditional1;
	ExpId53 -> "Id53: ls01";
	ExpNumber10 -> "Value10: 1";
	ExpNumber13 -> "Value14: 0";
	ExpId61 -> "Id61: sz";
	ExpId50 -> "Id50: aux01";
	ExpId51 -> "Id51: aux02";
	ExpNegate0 -> ExpBinary5;
	StatConditional1 -> ExpNegate0;
	StatConditional1 -> StatAssignId10;
	StatConditional1 -> StatBraces2;
	VarDecl11 -> TypeModInt16;
	VarDecl11 -> ExpId62;
	ExpId52 -> "Id52: nt";
	StatAssignId10 -> ExpId52;
	StatAssignId10 -> ExpNumber14;
	ExpNumber14 -> "Value15: 0";
	ExpNumber19 -> "Value21: 2";
	ExpId58 -> "Id58: j";
	StatBraces3 -> StatList8;
	ExpId22 -> "Id22: j";
	StatPrint3 -> ExpMethod4;
	StatList6 -> StatAssignId11;
	StatList6 -> StatAssignId12;
	StatList6 -> StatAssignId13;
	ExpId32 -> "Id32: ls01";
	StatAssignId12 -> ExpId54;
	StatAssignId12 -> ExpNumber15;
	ExpId18 -> "Id18: Search";
	ExpId55 -> "Id55: j";
	ExpId56 -> "Id56: size";
	StatBraces2 -> StatList6;
	ExpNumber2 -> "Value2: 8";
	ExpId57 -> "Id57: j";
	ExpNumber16 -> "Value18: 1";
	ExpId8 -> "Id8: sz";
	StatBraces1 -> StatList5;
	ExpId59 -> "Id59: ifound";
	MethDecl3 -> AccessModPublic3;
	MethDecl3 -> TypeModInt14;
	MethDecl3 -> ExpId60;
	MethDecl3 -> MethArgList3;
	MethDecl3 -> VarDeclList4;
	MethDecl3 -> StatList7;
	MethDecl3 -> ExpNumber23;
	StatList2 -> StatAssignId2;
	StatList2 -> StatWhileLoop0;
	ExpId60 -> "Id60: Init";
	ExpId40 -> "Id40: j";
	MethArgList3 -> MethArg2;
	ExpId62 -> "Id62: j";
	VarDeclList4 -> VarDecl11;
	VarDeclList4 -> VarDecl12;
	VarDeclList4 -> VarDecl13;
	VarDeclList4 -> VarDecl14;
	StatAssignId18 -> ExpId71;
	StatAssignId18 -> ExpBinary7;
	ExpId45 -> "Id45: aux02";
	VarDecl12 -> TypeModInt17;
	VarDecl12 -> ExpId63;
	StatAssignId15 -> ExpId66;
	StatAssignId15 -> ExpId67;
	ExpId67 -> "Id67: sz";
	ExpId6 -> "Id6: size";
	ExpId68 -> "Id68: number";
	StatAssignId16 -> ExpId68;
	StatAssignId16 -> ExpNewArray0;
	VarDecl14 -> TypeModInt19;
	VarDecl14 -> ExpId65;
	ExpId69 -> "Id69: sz";
	ExpNewArray0 -> ExpId69;
	ExpId70 -> "Id70: j";
	ExpId43 -> "Id43: number";
	ExpId71 -> "Id71: k";
	ExpId72 -> "Id72: size";
	ExpBinary5 -> ExpId50;
	ExpBinary5 -> Less3;
	ExpBinary5 -> ExpId51;
	ExpBinary7 -> ExpId72;
	ExpBinary7 -> Plus3;
	ExpBinary7 -> ExpNumber18;
	ExpId74 -> "Id74: size";
}

