digraph {
	ordering = out;
	MethDeclList2 -> MethDecl1;
	ExpNumber2 -> "Value2: 1";
	ExpId12 -> "Id12: size";
	ClassDecl2 -> ExpId10;
	ClassDecl2 -> VarDeclList3;
	ClassDecl2 -> MethDeclList2;
	ClassDecl2 -> ExpId13;
	ExpId9 -> "Id9: Base";
	ExpBinary0 -> ExpId12;
	ExpBinary0 -> Plus0;
	ExpBinary0 -> ExpNumber2;
	ClassDeclList0 -> ClassDecl0;
	ClassDeclList0 -> ClassDecl1;
	ClassDeclList0 -> ClassDecl2;
	MethDeclList0 -> MethDecl0;
	ExpNumber1 -> "Value1: 1";
	ExpNumber0 -> "Value0: 2";
	ExpId10 -> "Id10: GrandChild";
	StatPrint0 -> ExpMethod0;
	ExpId7 -> "Id7: num";
	VarDecl0 -> TypeModInt0;
	VarDecl0 -> ExpId5;
	ExpNewId0 -> ExpId2;
	ClassDecl1 -> ExpId8;
	ClassDecl1 -> VarDeclList2;
	ClassDecl1 -> MethDeclList1;
	ClassDecl1 -> ExpId9;
	ExpList0 -> ExpNumber0;
	ExpId13 -> "Id13: Child";
	ExpId3 -> "Id3: Func";
	ExpId4 -> "Id4: Base";
	MainClass0 -> ExpId0;
	MainClass0 -> ExpId1;
	MainClass0 -> StatList0;
	MethDecl1 -> AccessModPrivate0;
	MethDecl1 -> TypeModInt3;
	MethDecl1 -> ExpId11;
	MethDecl1 -> MethArgList1;
	MethDecl1 -> VarDeclList4;
	MethDecl1 -> StatList2;
	MethDecl1 -> ExpBinary0;
	ExpId0 -> "Id0: Main";
	ExpId1 -> "Id1: a";
	VarDeclList0 -> VarDecl0;
	ExpId8 -> "Id8: Child";
	ExpId2 -> "Id2: GrandChild";
	StatList0 -> StatPrint0;
	ExpId11 -> "Id11: Add";
	Program0 -> MainClass0;
	Program0 -> ClassDeclList0;
	ExpMethod0 -> ExpNewId0;
	ExpMethod0 -> ExpId3;
	ExpMethod0 -> ExpList0;
	ClassDecl0 -> ExpId4;
	ClassDecl0 -> VarDeclList0;
	ClassDecl0 -> MethDeclList0;
	MethDecl0 -> AccessModPublic0;
	MethDecl0 -> TypeModInt1;
	MethDecl0 -> ExpId6;
	MethDecl0 -> MethArgList0;
	MethDecl0 -> VarDeclList1;
	MethDecl0 -> StatList1;
	MethDecl0 -> ExpNumber1;
	ExpId5 -> "Id5: size";
	ExpId6 -> "Id6: Func";
	MethArg0 -> TypeModInt2;
	MethArg0 -> ExpId7;
	MethArgList0 -> MethArg0;
}

